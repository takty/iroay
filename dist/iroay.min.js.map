{
  "version": 3,
  "sources": ["../src/eval/category.ts", "../src/table/cc-min.ts", "../src/math.ts", "../src/eval/conspicuity.ts", "../src/eval/difference.ts", "../src/sim/color-vision.ts", "../src/cs/lms.ts", "../src/cs/xyz.ts", "../src/cs/lrgb.ts", "../src/cs/rgb.ts", "../src/cs/yiq.ts", "../src/cs/yxy.ts", "../src/const.ts", "../src/cs/lab.ts", "../src/cs/lch.ts", "../src/cs/munsell.ts", "../src/table/hc2xy-all-min.ts", "../src/lib/kdt.ts", "../src/cs/pccs.ts", "../src/color.ts", "../src/sim/age.ts", "../src/conv.ts", "../src/util.ts"],
  "sourcesContent": ["/**\n * Determination of the basic categorical color.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet } from './../type';\nimport { CC_TABLE } from './../table/cc-min';\nimport { mag } from '../math';\n\n/**\n * Basic Categorical Colors\n */\nexport const CATEGORICAL_COLORS = [\n\t'white', 'black', 'red', 'green',\n\t'yellow', 'blue', 'brown', 'purple',\n\t'pink', 'orange', 'gray',\n];\n\nconst Y_TO_LUM = 60;\n\nconst LUM_TABLE = [2, 5, 10, 20, 30, 40];\n\n/**\n * Find the basic categorical color of the specified color.\n * @param {Triplet} yxy Yxy color\n * @return {string} Basic categorical color\n */\nexport function categoryOfYxy([y, sx, sy]: Triplet): string {\n\tconst lum = Math.pow(y * Y_TO_LUM, 0.9);  // magic number\n\n\tlet diff = Number.MAX_VALUE;\n\tlet clu = 0;\n\tfor (let l of LUM_TABLE) {\n\t\tconst d = Math.abs(lum - l);\n\t\tif (d < diff) {\n\t\t\tdiff = d;\n\t\t\tclu = l;\n\t\t}\n\t}\n\tconst t: string = CC_TABLE[clu as 2|5|10|20|30|40] as string;\n\tsx *= 1000;\n\tsy *= 1000;\n\tlet dis = Number.MAX_VALUE;\n\tlet cc: number|string = 1;\n\tfor (let i = 0; i < 18 * 21; i += 1) {\n\t\tif (t[i] === '.') continue;\n\t\tconst x = (i % 18) * 25 + 150;\n\t\tconst y = ((i / 18) | 0) * 25 + 75;\n\t\tconst d = mag(sx - x, sy - y);\n\t\tif (d < dis) {\n\t\t\tdis = d;\n\t\t\tcc = t[i];\n\t\t}\n\t}\n\tconst ci = (cc === 'a') ? 10 : parseInt(cc as string);\n\treturn CATEGORICAL_COLORS[ci];\n}\n", "export const CC_TABLE = {\n\t 2: '...................5.................557................557...............55777.............55.777............55577777...........55577777..........5557777777........55511..6767.......333.116666666......3331.666666.......3333116666........33331116...........33333.............3333..............33...................................................................................',\n\t 5: '5..................55................557...............55777..............55777.............5577777...........555777777.........5557777777.........55a77777777.......555aa77777727.....555aaa66666666....3353aa666666666...33333a6666666......33333366666.......333333366.........33333333..........333333.............3333..............33................3..............................',\n\t10: '5..................57................557...............55777..............557777............5577777...........555777777.........55577777788.......555aa777..88.......555aa77...222.....555aa.68668.222...5333aa666666999...33333a66666699....3333333666666......3333333666........333333336.........3333333...........333333.............333...............33................3............',\n\t20: '.......................................77..............55777..............557777............557777............557777788.........55577778888.......555577.88888.......555.78888888......555aa.8888882.....5533.a888999999...33333366999999....3333333669999......33333334.99.......333333344.........33333333..........333333............33333..............33................3............',\n\t30: '..........................................................................5.77..............55777.............55777.............55577.8...........55557788...........55557888..........555508888.........3535348888........33333449999.......333333449999.......33333344449.......333333444.........33333334..........333333............33333..............333...............3............',\n\t40: '..............................................................................................77..............55577.............55577.............555578.............5550.8............5555088...........5333008...........35333449..........333333444..........333334444.........333333444.........33333344..........3333333...........33333..............333...............3............'\n};\n", "/**\n * Color-related math.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\n/**\n * Conversion factor from degrees to radians.\n */\nexport const DEG_RAD: number = Math.PI / 180;\n\n/**\n * Conversion factor from radians to degrees.\n */\nexport const RAD_DEG: number = 180 / Math.PI;\n\n/**\n * Twice PI.\n */\nexport const PI2: number = Math.PI * 2;\n\n/**\n * Calculates the angle in radians from the given two numbers `as` and `bs`.\n * This function uses the standard `atan2` function and adds 2\u03C0 if `bs` is negative.\n * @param {number} as The number to be used as the x-coordinate.\n * @param {number} bs The number to be used as the y-coordinate.\n * @returns {number} The calculated angle in radians.\n */\nexport function atan2rad(bs: number, as: number): number {\n\treturn Math.atan2(bs, as) + (bs < 0 ? PI2 : 0);\n}\n\n/**\n * Calculates the magnitude (length) of the vector from the origin to the point (a, b).\n * @param {number} a The x-coordinate of the point.\n * @param {number} b The y-coordinate of the point.\n * @returns {number} The Euclidean distance from the origin to (a, b).\n */\nexport function mag(a: number, b: number): number {\n\treturn Math.sqrt(a * a + b * b);\n}\n", "/**\n * Calculation of the conspicuity degree.\n * Reference: Effective use of color conspicuity for Re-Coloring system,\n * Correspondences on Human interface Vol. 12, No. 1, SIG-DE-01, 2010.\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from './../type';\nimport { RAD_DEG, atan2rad } from './../math';\n\n/**\n * Calculate the conspicuity degree.\n * @param {Triplet} lab L*, a*, b* of CIELAB color\n * @return {number} Conspicuity degree [0, 180]\n * TODO Consider chroma (ab radius of LAB)\n */\nexport function conspicuityOfLab([, as, bs]: Triplet): number {\n\tconst rad = atan2rad(bs, as);\n\tconst h = rad * RAD_DEG;\n\tconst a = 35;  // Constant\n\tif (h < a) return Math.abs(180 - (360 + h - a));\n\telse return Math.abs(180 - (h - a));\n}\n", "/**\n * Calculation of the color difference.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet } from '../type';\nimport { DEG_RAD, RAD_DEG, atan2rad, mag } from '../math';\n\n/**\n * They are sensual expressions of color difference by NBS unit.\n * The values represent the lower limit of each range.\n */\nexport enum NBS {\n\tTRACE       = 0.0,\n\tSLIGHT      = 0.5,\n\tNOTICEABLE  = 1.5,\n\tAPPRECIABLE = 3.0,\n\tMUCH        = 6.0,\n\tVERY_MUCH   = 12.0,\n};\n\n/**\n * Dental Materials J. 27(1), 139-144 (2008)\n */\nexport const DE_TO_NBS = 0.92;\n\n/**\n * Calculate distance of two vectors\n * @param {Triplet} vs1 vector 1\n * @param {Triplet} vs2 vector 2\n * @return {number} Distance\n */\nexport function distance([v11, v12, v13]: Triplet, [v21, v22, v23]: Triplet): number {\n\treturn Math.sqrt((v11 - v21) * (v11 - v21) + (v12 - v22) * (v12 - v22) + (v13 - v23) * (v13 - v23));\n}\n\n/**\n * Color difference calculation method by CIE 76\n * @param {Triplet} lab1 L*, a*, b* of CIELAB color 1\n * @param {Triplet} lab2 L*, a*, b* of CIELAB color 2\n * @return {number} Color difference\n */\nexport function CIE76([ls1, as1, bs1]: Triplet, [ls2, as2, bs2]: Triplet): number {\n\treturn Math.sqrt((ls1 - ls2) * (ls1 - ls2) + (as1 - as2) * (as1 - as2) + (bs1 - bs2) * (bs1 - bs2));\n}\n\n/**\n * Color difference calculation method by CIEDE2000\n * Reference: http://www.ece.rochester.edu/~gsharma/ciede2000/ciede2000noteCRNA.pdf\n * http://d.hatena.ne.jp/yoneh/20071227/1198758604\n * @param {Triplet} lab1 L*, a*, b* of CIELAB color 1\n * @param {Triplet} lab2 L*, a*, b* of CIELAB color 2\n * @return {number} Color difference\n */\nexport function CIEDE2000([ls1, as1, bs1]: Triplet, [ls2, as2, bs2]: Triplet): number {\n\tconst C1 = mag(as1, bs1), C2 = mag(as2, bs2);\n\tconst Cb = (C1 + C2) / 2;\n\tconst G = 0.5 * (1 - Math.sqrt(Math.pow(Cb, 7) / (Math.pow(Cb, 7) + Math.pow(25, 7))));\n\tconst ap1 = (1 + G) * as1, ap2 = (1 + G) * as2;\n\tconst Cp1 = mag(ap1, bs1), Cp2 = mag(ap2, bs2);\n\tconst hp1 = (bs1 === 0 && ap1 === 0) ? 0 : atan(bs1, ap1), hp2 = (bs2 === 0 && ap2 === 0) ? 0 : atan(bs2, ap2);\n\n\tconst DLp = ls2 - ls1;\n\tconst DCp = Cp2 - Cp1;\n\tlet Dhp = 0;\n\tif (Cp1 * Cp2 < 1e-10) {\n\t\tDhp = 0;\n\t} else if (Math.abs(hp2 - hp1) <= 180) {\n\t\tDhp = hp2 - hp1;\n\t} else if (hp2 - hp1 > 180) {\n\t\tDhp = (hp2 - hp1) - 360;\n\t} else if (hp2 - hp1 < -180) {\n\t\tDhp = (hp2 - hp1) + 360;\n\t}\n\tconst DHp = 2 * Math.sqrt(Cp1 * Cp2) * sin(Dhp / 2);\n\n\tconst Lbp = (ls1 + ls2) / 2;\n\tconst Cbp = (Cp1 + Cp2) / 2;\n\tlet hbp = 0;\n\tif (Cp1 * Cp2 < 1e-10) {\n\t\thbp = hp1 + hp2;\n\t} else if (Math.abs(hp2 - hp1) <= 180) {\n\t\thbp = (hp1 + hp2) / 2;\n\t} else if (Math.abs(hp2 - hp1) > 180 && hp1 + hp2 < 360) {\n\t\thbp = (hp1 + hp2 + 360) / 2;\n\t} else if (Math.abs(hp2 - hp1) > 180 && hp1 + hp2 >= 360) {\n\t\thbp = (hp1 + hp2 - 360) / 2;\n\t}\n\tconst T = 1 - 0.17 * cos(hbp - 30) + 0.24 * cos(2 * hbp) + 0.32 * cos(3 * hbp + 6) - 0.2 * cos(4 * hbp - 63);\n\tconst Dth = 30 * Math.exp(-sq((hbp - 275) / 25));\n\tconst RC = 2 * Math.sqrt(Math.pow(Cbp, 7) / (Math.pow(Cbp, 7) + Math.pow(25, 7)));\n\tconst SL = 1 + 0.015 * sq(Lbp - 50) / Math.sqrt(20 + sq(Lbp - 50));\n\tconst SC = 1 + 0.045 * Cbp;\n\tconst SH = 1 + 0.015 * Cbp * T;\n\tconst RT = -sin(2 * Dth) * RC;\n\n\tconst kL = 1, kC = 1, kH = 1;\n\tconst DE = Math.sqrt(sq(DLp / (kL * SL)) + sq(DCp / (kC * SC)) + sq(DHp / (kH * SH)) + RT * (DCp / (kC * SC)) * (DHp / (kH * SH)));\n\treturn DE;\n}\n\nfunction sq(v: number) { return v * v; }\nfunction atan(y: number, x: number) { return atan2rad(y, x) * RAD_DEG; }\nfunction sin(deg: number) { return Math.sin(deg * DEG_RAD); }\nfunction cos(deg: number) { return Math.cos(deg * DEG_RAD); }\n", "/**\n * Color vision simulation.\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\n\nimport { fromXYZ as xyz2lms } from '../cs/lms';\nimport { fromLRGB as lrgb2xyz } from '../cs/xyz';\n\n/*\n * Reference: Brettel, H.; Vi\u00E9not, F. & Mollon, J. D.,\n * Computerized simulation of color appearance for dichromats,\n * Journal of the Optical Society of America A, 1997, 14, 2647-2655.\n */\n\n/**\n * Simulate protanopia\n * @param {Triplet} lms LMS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in protanopia.\n */\nexport function brettelP([l, m, s]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = 0.0 * l + 2.02344 * m + -2.52581 * s;\n\tdest[1] = 0.0 * l + 1.0     * m +  0.0     * s;\n\tdest[2] = 0.0 * l + 0.0     * m +  1.0     * s;\n\treturn dest;\n}\n\n/**\n * Simulate deuteranopia\n * @param {Triplet} lms LMS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in deuteranopia.\n */\nexport function brettelD([l, m, s]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = 1.0      * l + 0.0 * m + 0.0     * s;\n\tdest[1] = 0.494207 * l + 0.0 * m + 1.24827 * s;\n\tdest[2] = 0.0      * l + 0.0 * m + 1.0     * s;\n\treturn dest;\n}\n\n\n// -----------------------------------------------------------------------------\n\n\n/*\n * Reference: Katsunori Okajima, Syuu Kanbe,\n * A Real-time Color Simulation of Dichromats,\n * IEICE technical report 107(117), 107-110, 2007-06-21.\n */\n\nconst OC_LMS_BASE: Triplet  = xyz2lms([1, 1, 1]);\nconst OC_LMS_BASE2: Triplet = xyz2lms(lrgb2xyz([1, 1, 1]));\n\nlet doOc: boolean = false;\nlet ocAlpha: number = 1;\nlet ocBeta: number = 1;\n\n/**\n * Set the options for Okajima correction.\n *\n * @param {boolean} doCorrection - Whether to apply the Okajima correction.\n * @param {number} [alpha=1] - The alpha parameter for the correction.\n * @param {number} [beta=1] - The beta parameter for the correction.\n * @return {void}\n */\nexport function setOkajimaCorrectionOption(doCorrection: boolean, alpha: number = 1, beta: number = 1): void {\n\tdoOc = doCorrection;\n\tocAlpha = alpha;\n\tocBeta = beta;\n}\n\n/**\n * Correct simulation of protanopia\n * @param {number} m Original M of LMS color.\n * @param {Triplet} lms LMS color of protanopia simulation.\n * @param {Triplet} base Base LMS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in protanopia.\n */\nexport function okajimaCorrectionP(m: number, [l2, m2, s2]: Triplet, base: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst sp1 = m / base[1];\n\tconst dp0 = l2 / base[0];\n\tconst dp1 = m2 / base[1];\n\tconst dp2 = s2 / base[2];\n\tconst k = ocBeta * sp1 / (ocAlpha * dp0 + ocBeta * dp1);\n\tdest[0] = (k * dp0) * base[0];\n\tdest[1] = (k * dp1) * base[1];\n\tdest[2] = (k * dp2) * base[2];\n\treturn dest;\n}\n\n/**\n * Correct simulation of deuteranopia\n * @param {number} l Original L of LMS color.\n * @param {Triplet} lms LMS color of deuteranopia simulation.\n * @param {Triplet} base Base LMS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in deuteranopia.\n */\nexport function okajimaCorrectionD(l: number, [l2, m2, s2]: Triplet, base: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst sp0 = l / base[0];\n\tconst dp0 = l2 / base[0];\n\tconst dp1 = m2 / base[1];\n\tconst dp2 = s2 / base[2];\n\tconst k = ocAlpha * sp0 / (ocAlpha * dp0 + ocBeta * dp1);\n\tdest[0] = (k * dp0) * base[0];\n\tdest[1] = (k * dp1) * base[1];\n\tdest[2] = (k * dp2) * base[2];\n\treturn dest;\n}\n\n\n// -----------------------------------------------------------------------------\n\n\n/**\n * Convert LMS to LMS in protanopia (Method 1).\n * @param {Triplet} lms LMS color\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in protanopia\n */\nexport function lmsToProtanopia(lms: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tbrettelP(lms, dest);\n\tif (doOc) {\n\t\tokajimaCorrectionP(lms[1], dest, OC_LMS_BASE, dest);\n\t}\n\treturn dest;\n}\n\n/**\n * Convert LMS to LMS in deuteranopia (Method 1).\n * @param {Triplet} lms LMS color\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in deuteranopia\n */\nexport function lmsToDeuteranopia(lms: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tbrettelD(lms, dest);\n\tif (doOc) {\n\t\tokajimaCorrectionD(lms[0], dest, OC_LMS_BASE, dest);\n\t}\n\treturn dest;\n}\n\n\n// -----------------------------------------------------------------------------\n\n\n/**\n * Convert Linear RGB to LMS in protanopia (Method 2).\n * @param {Triplet} lrgb Linear RGB color\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in protanopia\n */\nexport function lrgbToProtanopia([lr, lg, lb]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst lrgb2: Triplet = [\n\t\t0.992052 * lr + 0.003974,\n\t\t0.992052 * lg + 0.003974,\n\t\t0.992052 * lb + 0.003974,\n\t];\n\tconst lms = xyz2lms(lrgb2xyz(lrgb2));\n\tbrettelP(lms, dest);\n\n\tif (doOc) {\n\t\tokajimaCorrectionP(lms[1], dest, OC_LMS_BASE2, dest);\n\t}\n\treturn dest;\n}\n\n/**\n * Convert Linear RGB to LMS in deuteranopia (Method 2).\n * @param {Triplet} lrgb Linear RGB color\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color in deuteranopia\n */\nexport function lrgbToDeuteranopia([lr, lg, lb]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst lrgb2: Triplet = [\n\t\t0.957237 * lr + 0.0213814,\n\t\t0.957237 * lg + 0.0213814,\n\t\t0.957237 * lb + 0.0213814,\n\t];\n\tconst lms = xyz2lms(lrgb2xyz(lrgb2));\n\tbrettelD(lms, dest);\n\n\tif (doOc) {\n\t\tokajimaCorrectionD(lms[0], dest, OC_LMS_BASE2, dest);\n\t}\n\treturn dest;\n}\n", "/**\n * This class converts the LMS color system.\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\n\n/*\n * Reference: F. Vienot, H. Brettel, and J.D. Mollon,\n * Digital video colourmaps for checking the legibility of displays by dichromats,\n * COLOR research and application, vol.24, no.4, pp.243-252, Aug. 1999.\n */\nexport const SMITH_POKORNY: Triplet[] = [\n\t[ 0.15514, 0.54312, -0.03286],\n\t[-0.15514, 0.45684,  0.03286],\n\t[ 0.0,     0.0,      0.01608]\n];\n\nexport const SMITH_POKORNY_INV: Triplet[] = [\n\t[2.944812906606763, -3.500977991936487, 13.17218214714747],\n\t[1.000040001600064,  1.000040001600064,  0.0             ],\n\t[0.0,                0.0,               62.18905472636816]\n];\n\nexport const BRADFORD: Triplet[] = [\n\t[ 0.8951000,  0.2664000, -0.1614000],\n\t[-0.7502000,  1.7135000,  0.0367000],\n\t[ 0.0389000, -0.0685000,  1.0296000]\n];\n\nexport const BRADFORD_INV: Triplet[] = [\n\t[ 0.9869929, -0.1470543,  0.1599627],\n\t[ 0.4323053,  0.5183603,  0.0492912],\n\t[-0.0085287,  0.0400428,  0.9684867]\n];\n\nexport const VON_KRIES: Triplet[] = [\n\t[ 0.4002400, 0.7076000, -0.0808100],\n\t[-0.2263000, 1.1653200,  0.0457000],\n\t[ 0.0000000, 0.0000000,  0.9182200]\n];\n\nexport const VON_KRIES_INV: Triplet[] = [\n\t[1.8599364, -1.1293816,  0.2198974],\n\t[0.3611914,  0.6388125, -0.0000064],\n\t[0.0000000,  0.0000000,  1.0890636]\n];\n\nexport const ConversionMethod = Object.freeze({\n\tSMITH_POKORNY: { direct: SMITH_POKORNY, inverse: SMITH_POKORNY_INV },\n\tBRADFORD: { direct: BRADFORD, inverse: BRADFORD_INV },\n\tVON_KRIES: { direct: VON_KRIES, inverse: VON_KRIES_INV },\n});\n\nexport function setConversionMethod(cm: { direct: Triplet[]; inverse: Triplet[] }) {\n\tconversionMethod = cm;\n}\n\nlet conversionMethod = ConversionMethod.SMITH_POKORNY;\n\n\n// XYZ ---------------------------------------------------------------------\n\n\n/**\n * Convert CIE 1931 XYZ to LMS.\n * @param {Triplet} xyz XYZ color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LMS color.\n */\nexport function fromXYZ([x, y, z]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst cm = conversionMethod.direct;\n\tdest[0] = cm[0][0] * x + cm[0][1] * y + cm[0][2] * z;\n\tdest[1] = cm[1][0] * x + cm[1][1] * y + cm[1][2] * z;\n\tdest[2] = cm[2][0] * x + cm[2][1] * y + cm[2][2] * z;\n\treturn dest;\n}\n\n/**\n * Convert LMS to CIE 1931 XYZ.\n * @param {Triplet} lms LMS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ color.\n */\nexport function toXYZ([l, m, s]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst cm = conversionMethod.inverse;\n\tdest[0] = cm[0][0] * l + cm[0][1] * m + cm[0][2] * s;\n\tdest[1] = cm[1][0] * l + cm[1][1] * m + cm[1][2] * s;\n\tdest[2] = cm[2][0] * l + cm[2][1] * m + cm[2][2] * s;\n\treturn dest;\n}\n", "/**\n * This class converts the CIE 1931 XYZ color system.\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\n\nexport { toXYZ as fromLRGB, fromXYZ as toLRGB } from './lrgb';\nexport { toXYZ as fromYxy, fromXYZ as toYxy } from './yxy';\nexport { toXYZ as fromLab, fromXYZ as toLab } from './lab';\nexport { toXYZ as fromLMS, fromXYZ as toLMS } from './lms';\nexport { toXYZ as fromMunsell, fromXYZ as toMunsell } from './munsell';\n\n\n// Conversion of Standard Illuminant ---------------------------------------\n\n\n/**\n * Convert CIE 1931 XYZ of standard illuminant C to CIE 1931 XYZ of standard illuminant D65.\n * Reference: http://www.brucelindbloom.com/index.html?MunsellCalculator.html (Von Kries method)\n * @param {Triplet} xyz XYZ color (standard illuminant C).\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ of standard illuminant D65.\n */\nexport function fromIlluminantC([x, y, z]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] =  0.9972812 * x + -0.0093756 * y + -0.0154171 * z;\n\tdest[1] = -0.0010298 * x +  1.0007636 * y +  0.0002084 * z;\n\tdest[2] =                                    0.9209267 * z;\n\treturn dest;\n}\n\n/**\n * Convert CIE 1931 XYZ of standard illuminant D65 to CIE 1931 XYZ of standard illuminant C.\n * Reference: http://www.brucelindbloom.com/index.html?MunsellCalculator.html (Von Kries method)\n * @param {Triplet} xyz XYZ color (standard illuminant D65).\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ of standard illuminant C.\n */\nexport function toIlluminantC([x, y, z]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = 1.0027359 * x +  0.0093941 * y +  0.0167846 * z;\n\tdest[1] = 0.0010319 * x +  0.9992466 * y + -0.0002089 * z;\n\tdest[2] =                                   1.0858628 * z;\n\treturn dest;\n}\n", "/**\n * This class converts the Linear RGB color system.\n * It is targeted for Linear RGB which converted sRGB (D65).\n * Reference: http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\n\nexport { toLRGB as fromRGB, fromLRGB as toRGB } from './rgb';\nexport { toLRGB as fromYIQ, fromLRGB as toYIQ } from './yiq';\n\n\n// XYZ ---------------------------------------------------------------------\n\n\n/**\n * Convert CIE 1931 XYZ to Linear RGB.\n * @param {Triplet} xyz XYZ color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Linear RGB color.\n */\nexport function fromXYZ([x, y, z]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] =  3.2404542 * x + -1.5371385 * y + -0.4985314 * z;\n\tdest[1] = -0.9692660 * x +  1.8760108 * y +  0.0415560 * z;\n\tdest[2] =  0.0556434 * x + -0.2040259 * y +  1.0572252 * z;\n\treturn dest;\n}\n\n/**\n * Convert Linear RGB to CIE 1931 XYZ.\n * @param {Triplet} lrgb Linear RGB color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ color.\n */\nexport function toXYZ([lr, lg, lb]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = 0.4124564 * lr + 0.3575761 * lg + 0.1804375 * lb;\n\tdest[1] = 0.2126729 * lr + 0.7151522 * lg + 0.0721750 * lb;\n\tdest[2] = 0.0193339 * lr + 0.1191920 * lg + 0.9503041 * lb;\n\treturn dest;\n}\n", "/**\n * This class converts the sRGB color system.\n * Reference: http://www.w3.org/Graphics/Color/sRGB.html\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet } from '../type';\n\nexport const MIN: number = 0;\nexport const MAX: number = 255;\nexport const INV_MAX: number = 1 / MAX;\n\nexport let isSaturated: boolean = false;\n\nfunction checkRange(vs: Triplet, min: number, max: number): boolean {\n\tlet isSaturated: boolean = false;\n\tfor (let i = 0; i < 3; ++i) {\n\t\tif (vs[i] > max) { vs[i] = max; isSaturated = true; }\n\t\telse if (vs[i] < min) { vs[i] = min; isSaturated = true; }\n\t}\n\treturn isSaturated;\n}\n\n// Convert sRGB to Linear RGB (gamma correction).\nfunction fn(v: number): number {\n\treturn (v < 0.03928) ? (v / 12.92) : Math.pow((v + 0.055) / 1.055, 2.4);\n}\n\n// Convert Linear RGB to sRGB (inverse gamma correction).\nfunction ifn(v: number): number {\n\treturn (v > 0.00304) ? (Math.pow(v, 1 / 2.4) * 1.055 - 0.055) : (v * 12.92);\n}\n\n\n// LRGB ------------------------------------------------------------------------\n\n\n/**\n * Convert Linear RGB to sRGB (Gamma 2.2).\n * @param {Triplet} lrgb Linear RGB color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} sRGB color.\n */\nexport function fromLRGB([lr, lg, lb]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = ifn(lr) * MAX | 0;\n\tdest[1] = ifn(lg) * MAX | 0;\n\tdest[2] = ifn(lb) * MAX | 0;\n\tisSaturated = checkRange(dest, MIN, MAX);\n\treturn dest;\n}\n\n/**\n * Convert sRGB (Gamma 2.2) to Linear RGB.\n * @param {Triplet} rgb sRGB color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Linear RGB color.\n */\nexport function toLRGB([r, g, b]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = fn(r * INV_MAX);\n\tdest[1] = fn(g * INV_MAX);\n\tdest[2] = fn(b * INV_MAX);\n\treturn dest;\n}\n", "/**\n * This class converts the YIQ color system.\n * Reference: http://en.wikipedia.org/wiki/YIQ\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\n\n\n// LRGB --------------------------------------------------------------------\n\n\n/**\n * Convert Linear RGB to YIQ.\n * @param {Triplet} lrgb Linear RGB color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} YIQ color.\n */\nexport function fromLRGB([lr, lg, lb]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = 0.2990   * lr +  0.5870   * lg +  0.1140   * lb;  // Y[0, 1]\n\tdest[1] = 0.595716 * lr + -0.274453 * lg + -0.321263 * lb;  // I[-0.5957, 0.5957]\n\tdest[2] = 0.211456 * lr + -0.522591 * lg +  0.311135 * lb;  // Q[-0.5226, 0.5226]\n\treturn dest;\n}\n\n/**\n * Convert YIQ to Linear RGB.\n * @param {Triplet} yiq YIQ color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Linear RGB color.\n */\nexport function toLRGB([y, i, q]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = y +  0.9563 * i +  0.6210 * q;  // R[0, 1]\n\tdest[1] = y + -0.2721 * i + -0.6474 * q;  // G[0, 1]\n\tdest[2] = y + -1.1070 * i +  1.7046 * q;  // B[0, 1]\n\treturn dest;\n}\n", "/**\n * This class converts the Yxy color system.\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\nimport { D65_xyz, D65_XYZ } from '../const';\n\nexport let isSaturated = false;\n\n\n// XYZ ---------------------------------------------------------------------\n\n\n/**\n * Convert CIE 1931 XYZ to Yxy.\n * @param {Triplet} xyz XYZ color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Yxy color.\n */\nexport function fromXYZ([x, y, z]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = y;\n\tconst sum = x + y + z;\n\tif (sum === 0) {\n\t\tdest[1] = D65_xyz[0];\n\t\tdest[2] = D65_xyz[1];\n\t} else {\n\t\tdest[1] = x / sum;\n\t\tdest[2] = y / sum;\n\t}\n\treturn dest;\n}\n\n/**\n * Convert Yxy to CIE 1931 XYZ.\n * @param {Triplet} yxy Yxy color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ color.\n */\nexport function toXYZ([y, sx, sy]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst d0 = sx * y / sy;\n\tif (!Number.isFinite(d0)) {\n\t\tisSaturated = false;\n\t\tdest[0] = 0;\n\t\tdest[1] = 0;\n\t\tdest[2] = 0;\n\t} else {\n\t\tconst d1 = y;\n\t\tconst d2 = (1 - sx - sy) * y / sy;\n\t\tisSaturated = (D65_XYZ[0] < d0 || D65_XYZ[1] < d1 || D65_XYZ[2] < d2);\n\t\tdest[0] = d0;\n\t\tdest[1] = d1;\n\t\tdest[2] = d2;\n\t}\n\treturn dest;\n}\n", "/**\n * Color-related constants.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet } from './type';\n\n/**\n * D50 tristimulus value\n * Reference: http://www.babelcolor.com/download/A%20review%20of%20RGB%20color%20spaces.pdf\n */\nexport const D50_xyz: Triplet = [0.34567, 0.35850, 0.29583];\nexport const D50_XYZ: Triplet = [D50_xyz[0] / D50_xyz[1], 1, D50_xyz[2] / D50_xyz[1]];\n\n/**\n * D65 tristimulus value\n * Reference: http://www.babelcolor.com/download/A%20review%20of%20RGB%20color%20spaces.pdf\n */\nexport const D65_xyz: Triplet = [0.31273, 0.32902, 0.35825];\nexport const D65_XYZ: Triplet = [D65_xyz[0] / D65_xyz[1], 1, D65_xyz[2] / D65_xyz[1]];\n", "/**\n * This class converts the CIELAB (L*a*b*) color system.\n * By default, D65 is used as tristimulus value.\n * Reference: http://en.wikipedia.org/wiki/Lab_color_space\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from '../type';\nimport { D65_XYZ } from '../const';\n\nexport { toLab as fromLCh, fromLab as toLCh } from './lch';\n\n// Constants for simplification of calculation\nconst C1 = Math.pow(6, 3) / Math.pow(29, 3);      // (6/29)^3 = 0.0088564516790356308171716757554635\nconst C2 = 3 * Math.pow(6, 2) / Math.pow(29, 2);  // 3*(6/29)^2 = 0.12841854934601664684898929845422\nconst C3 = 6 / 29;                                // 6/29 = 0.20689655172413793103448275862069\n\n/**\n * XYZ tristimulus value\n */\nconst XYZ_TRISTIMULUS_VALUES = D65_XYZ;\n\n// Conversion function\nfunction fn(v: number): number {\n\treturn (v > C1) ? Math.pow(v, 1 / 3) : (v / C2 + 4 / 29);\n}\n\n// Inverse conversion function\nfunction ifn(v: number): number {\n\treturn (v > C3) ? Math.pow(v, 3) : ((v - 4 / 29) * C2);\n}\n\n\n// XYZ ---------------------------------------------------------------------\n\n\n/**\n * Convert CIE 1931 XYZ to CIE 1976 (L*, a*, b*).\n * @param {Triplet} xyz XYZ color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} CIELAB color.\n */\nexport function fromXYZ([x, y, z]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst fx = fn(x / XYZ_TRISTIMULUS_VALUES[0]);\n\tconst fy = fn(y / XYZ_TRISTIMULUS_VALUES[1]);\n\tconst fz = fn(z / XYZ_TRISTIMULUS_VALUES[2]);\n\tdest[0] = 116 * fy - 16;\n\tdest[1] = 500 * (fx - fy);\n\tdest[2] = 200 * (fy - fz);\n\treturn dest;\n}\n\n/**\n * Convert CIE 1976 (L*, a*, b*) to CIE 1931 XYZ.\n * @param {Triplet} lab L*, a*, b* of CIELAB color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ color.\n */\nexport function toXYZ([ls, as, bs]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst fy = (ls + 16) / 116;\n\tconst fx = fy + as / 500;\n\tconst fz = fy - bs / 200;\n\tdest[0] = ifn(fx) * XYZ_TRISTIMULUS_VALUES[0];\n\tdest[1] = ifn(fy) * XYZ_TRISTIMULUS_VALUES[1];\n\tdest[2] = ifn(fz) * XYZ_TRISTIMULUS_VALUES[2];\n\treturn dest;\n}\n\n/**\n * Convert CIE 1931 XYZ to L* of CIE 1976 (L*, a*, b*).\n * @param {Triplet} xyz XYZ color.\n * @return {number} L*\n */\nexport function lightnessFromXYZ([, y,]: Triplet): number {\n\tconst fy = fn(y / XYZ_TRISTIMULUS_VALUES[1]);\n\treturn 116 * fy - 16;\n}\n", "/**\n * This class converts the LCh color system.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet } from '../type';\nimport { DEG_RAD, RAD_DEG, atan2rad, mag } from '../math';\n\n\n// Lab ---------------------------------------------------------------------\n\n\n/**\n * Convert CIELAB (L*a*b*) to LCh.\n * @param {Triplet} lab L*, a*, b* of CIELAB color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} LCh color.\n */\nexport function fromLab([ls, as, bs]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst rad = atan2rad(bs, as);\n\tdest[0] = ls;\n\tdest[1] = mag(as, bs);\n\tdest[2] = rad * RAD_DEG;\n\treturn dest;\n}\n\n/**\n * Convert LCh to CIELAB (L*a*b*).\n * @param {Triplet} lch LCh color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} L*, a*, b* of CIELAB color.\n */\nexport function toLab([ls, cs, h]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst rad = h * DEG_RAD;\n\tdest[0] = ls;\n\tdest[1] = Math.cos(rad) * cs;\n\tdest[2] = Math.sin(rad) * cs;\n\treturn dest;\n}\n", "/**\n * This class converts the Munsell (HVC) color system.\n * D65 is used as tristimulus value.\n * Since conversion is performed by approximation based on the distance to the sample color, the conversion result is approximate value.\n * Also, when H is -1, it is regarded as an achromatic color (N) in particular.\n * Reference: https://www.rit.edu/science/munsell-color-science-lab-educational-resources#munsell-renotation-data\n *\n * @author Takuto Yanagida\n * @version 2024-10-23\n */\n\nimport { TBL_SRC_MIN, TBL_V } from '../table/hc2xy-all-min';\nimport { Tree } from '../lib/kdt';\nimport { Pair, Triplet } from '../type';\n\nimport { toIlluminantC as xyz2c,  fromIlluminantC as c2xyz } from './xyz';\nimport { fromXYZ as xyz2yxy, toXYZ as yxy2xyz }  from './yxy';\n\nexport { toMunsell as fromPCCS, fromMunsell as toPCCS } from './pccs';\n\nfunction eq0(x: number): boolean {\n\treturn Math.abs(x) < EP;\n}\n\nfunction eq(x0: number, x1: number): boolean {\n\treturn Math.abs(x0 - x1) < EP;\n}\n\nfunction div(a: Pair, b: Pair, r: number): Pair {\n\treturn [(b[0] - a[0]) * r + a[0], (b[1] - a[1]) * r + a[1]];\n}\n\nfunction cross(ax: number, ay: number, bx: number, by: number): number {\n\treturn ax * by - ay * bx;\n}\n\n// Whether a point (x, y) exists within the interior (including the boundary) of the clockwise triangle abc\n// in the mathematical coordinate system (positive on the y axis is upward)\nfunction inside(p: Pair, a: Pair, b: Pair, c: Pair): boolean {\n\t// If x, y are on the right side of ab, the point is outside the triangle\n\tif (cross(p[0] - a[0], p[1] - a[1], b[0] - a[0], b[1] - a[1]) < 0) return false;\n\t// If x, y are on the right side of bc, the point is outside the triangle\n\tif (cross(p[0] - b[0], p[1] - b[1], c[0] - b[0], c[1] - b[1]) < 0) return false;\n\t// If x, y are on the right side of ca, the point is outside the triangle\n\tif (cross(p[0] - c[0], p[1] - c[1], a[0] - c[0], a[1] - c[1]) < 0) return false;\n\treturn true;\n}\n\nconst HUE_NAMES: string[] = ['R', 'YR', 'Y', 'GY', 'G', 'BG', 'B', 'PB', 'P', 'RP'];  // 1R = 1, 9RP = 99, 10RP = 0\nconst EP = 0.0000000000001;\nconst ILLUMINANT_C: Pair = [0.3101, 0.3162];  // Standard illuminant C, white point\n\nlet TBL_MAX_C: number[][];\nlet TBL: (Pair|null)[][][];  // [vi][10 * h / 25][c / 2] -> [x, y]\nlet TBL_TREES: Tree[] = [];\n\nexport const MIN_HUE = 0;\nexport const MAX_HUE = 100;  // Same as MIN_HUE\nexport const MONO_LIMIT_C = 0.05;\n\nexport let isSaturated: boolean = false;\n\ninitTable(TBL_V, TBL_SRC_MIN);\n\nfunction initTable(tbl_v: number[], tbl_src_min: number[][][]): void {\n\tTBL       = new Array(tbl_v.length);  // [vi][10 * h / 25][c / 2] -> [x, y]\n\tTBL_MAX_C = new Array(tbl_v.length);\n\tTBL_TREES = new Array(tbl_v.length);\n\n\tfor (let vi: number = 0; vi < tbl_v.length; vi += 1) {\n\t\tTBL[vi]       = new Array(1000 / 25);\n\t\tTBL_MAX_C[vi] = new Array(1000 / 25);\n\t\tTBL_MAX_C[vi].fill(0);\n\n\t\tfor (let i: number = 0, n: number = 1000 / 25; i < n; i += 1) {\n\t\t\tTBL[vi][i] = new Array(50 / 2 + 2);  // 2 <= C <= 52\n\t\t\tTBL[vi][i].fill(null);\n\t\t}\n\t\tconst data: [Pair, Pair][] = [];\n\n\t\tfor (const cs of tbl_src_min[vi]) {\n\t\t\tconst hi = cs.shift() as number;\n\t\t\tintegrate(cs);\n\t\t\tintegrate(cs);\n\n\t\t\tfor (let i: number = 0; i < cs.length; i += 2) {\n\t\t\t\tconst ci: number = i / 2 + 1;\n\t\t\t\tconst x: number = cs[i + 0] / 1000;\n\t\t\t\tconst y: number = cs[i + 1] / 1000;\n\n\t\t\t\tTBL[vi][hi][ci] = [x, y];\n\t\t\t\tdata.push([[x, y], [hi * 25, ci * 2]]);\n\t\t\t}\n\t\t\tTBL_MAX_C[vi][hi] = cs.length - 2;\n\t\t}\n\t\tTBL_TREES[vi] = new Tree(data);\n\t}\n\n\tfunction integrate(cs: number[]): void {\n\t\tlet x_: number = 0;\n\t\tlet y_: number = 0;\n\n\t\tfor (let i: number = 0; i < cs.length; i += 2) {\n\t\t\tx_ += cs[i];\n\t\t\ty_ += cs[i + 1];\n\t\t\tcs[i]     = x_;\n\t\t\tcs[i + 1] = y_;\n\t\t}\n\t}\n}\n\nfunction getXy(vi: number, ht: number, c: number): Pair | null {\n\tif (c === 0) return ILLUMINANT_C;\n\tif (1000 <= ht) ht -= 1000;\n\treturn TBL[vi][ht / 25][c / 2];\n}\n\nfunction getMaxC(vi: number, ht: number): number {\n\tif (1000 <= ht) ht -= 1000;\n\tif (ht < 0) ht += 1000;\n\treturn TBL_MAX_C[vi][ht / 25];\n}\n\n// Find Y of XYZ (C) from Munsell's V (JIS).\nfunction v2y(v: number): number {\n\tif (v <= 1) return v * 0.0121;\n\tconst v2: number = v * v;\n\tconst v3: number = v2 * v;\n\tconst y: number = 0.0467 * v3 + 0.5602 * v2 - 0.1753 * v + 0.8007;\n\treturn y / 100;\n}\n\n// Munsell's V is obtained from Y of XYZ (C) (JIS, Newton's method).\nfunction y2v(y: number): number {\n\tif (y <= 0.0121) return y / 0.0121;\n\tlet v: number = 10;\n\tfor (let i: number = 0; i < 1000; ++i) {  // Max iteration is 1000.\n\t\tconst f: number = v2y(v) - y;\n\t\tconst fp: number =  (v <= 1) ? 0.0121 : ((3 * 0.0467 * (v * v) + 2 * 0.5602 * v - 0.1753) / 100);\n\t\tif (Math.abs(f) < 0.0001) break;\n\t\tv = v - f / fp;\n\t}\n\treturn v;\n}\n\n\n// -------------------------------------------------------------------------\n\n\n// Find the Munsell value from xyY (standard illuminant C).\nfunction yxy2mun([Y, x, y]: Triplet): Triplet {\n\tconst v: number = y2v(Y);  // Find Munsell lightness\n\tisSaturated = false;\n\n\t// When the lightness is maximum 10\n\tif (eq(v, TBL_V.at(-1) as number)) {\n\t\tconst [h, c] = scanHC(x, y, TBL_V.length - 1);\n\t\treturn [h, v, c];\n\t}\n\t// When the lightness is 0 or the lightness is larger than the maximum 10, or when it is an achromatic color (standard illuminant C)\n\tif (eq0(v) || TBL_V.at(-1) as number < v || (eq(x, ILLUMINANT_C[0]) && eq(y, ILLUMINANT_C[1]))) {\n\t\treturn [0, v, 0];\n\t}\n\t// Obtain lower side\n\tlet vi_l: number = -1;\n\twhile (TBL_V[vi_l + 1] <= v) ++vi_l;\n\tlet hc_l: Pair = [0, 0] as Pair;  // Hue and chroma of the lower side\n\tif (vi_l !== -1) hc_l = scanHC(x, y, vi_l);\n\n\t// Obtain upper side\n\tconst vi_u: number = vi_l + 1;\n\tconst hc_u: Pair = scanHC(x, y, vi_u);\n\n\t// When the lightness on the lower side is the minimum 0, the hue is matched with the upper side, and the chroma is set to 0\n\tif (vi_l === -1) {\n\t\thc_l[0] = hc_u[0];\n\t\thc_l[1] = 0;\n\t}\n\tconst v_l: number = ((vi_l === -1) ? 0 : TBL_V[vi_l]);\n\tconst v_h: number = TBL_V[vi_u];\n\tconst r: number = (v - v_l) / (v_h - v_l);\n\n\tconst [h, c] = calcIdpHc(hc_l, hc_u, r);\n\treturn [h, v, c];\n}\n\n// Acquires the hue and chroma for the chromaticity coordinates (x, y) on the surface of the given lightness index.\n// If not included, -1 is returned.\nfunction scanHC(x: number, y: number, vi: number): Pair {\n\tconst p = [x, y] as Pair;\n\tconst [[q, ],] = TBL_TREES[vi].neighbors(p, 1);\n\tlet ht0: number = q[0] - 125;\n\tlet ht1: number = q[0] + 125;\n\n\tif (ht0 < 0 && ht1 < ht0 + 1000) {\n\t\tht0 += 1000;\n\t\tht1 += 1000;\n\t}\n\n\tfor (let ht_l: number = ht0; ht_l <= ht1; ht_l += 25) {  // h 0-975 step 25;\n\t\tinner:\n\t\tfor (let c_l: number = 0; c_l <= 50; c_l += 2) {  // c 0-50 step 2;\n\t\t\tconst [hc_r, state] = scanOneHC(p, vi, ht_l, c_l);\n\t\t\tif (state === 'h') break inner;\n\t\t\tif (hc_r) {\n\t\t\t\treturn [\n\t\t\t\t\t(25 * hc_r[0] + ht_l) / 10,\n\t\t\t\t\t2 * hc_r[1] + c_l\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t}\n\tconst ps = TBL_TREES[vi].neighbors(p, 2);\n\tif (2 === ps.length) {\n\t\tisSaturated = true;\n\t\tlet [[[ht0, c0], d0], [[ht1, c1], d1]] = ps;\n\t\tconst r: number = d0 / (d0 + d1);\n\t\treturn calcIdpHc([ht0 / 10, c0], [ht1 / 10, c1], r);\n\t}\n\treturn [0, 0];\n}\n\nfunction scanOneHC(p: Pair, vi: number, ht_l: number, c_l: number): [Pair | null, string] {\n\tlet hc_r: Pair | null = null;\n\n\tconst wa: Pair | null = getXy(vi, ht_l, c_l);\n\tconst wb: Pair | null = getXy(vi, ht_l + 25, c_l);\n\tlet wc: Pair | null = getXy(vi, ht_l + 25, c_l + 2);\n\tlet wd: Pair | null = getXy(vi, ht_l, c_l + 2);\n\n\tif (wa === null && wb === null) return [null, 'h'];\n\n\tif (c_l !== 0) {\n\t\tif (wa && wb && wc && !wd) {\n\t\t\twd = [wa[0] + (wc[0] - wb[0]), wa[1] + (wc[1] - wb[1])]\n\t\t} else if (wa && wb && !wc && wd) {\n\t\t\twc = [wb[0] + (wd[0] - wa[0]), wb[1] + (wd[1] - wa[1])]\n\t\t}\n\t}\n\tif (wa === null || wb === null || wc === null || wd === null) return [null, ''];\n\n\tif (c_l === 0) {\n\t\tif (inside(p, wa, wc, wd)) {\n\t\t\thc_r = interpolationR(p, wa, wd, wb, wc);\n\t\t}\n\t} else {\n\t\tif (inside(p, wa, wc, wd) || inside(p, wa, wb, wc)) {\n\t\t\thc_r = interpolationR(p, wa, wd, wb, wc);\n\t\t}\n\t}\n\treturn [hc_r, ''];\n\n\t/*\n\t\t* Calculate the proportion [h, v] of each point in the area surrounded by the points of the following placement (null if it is invalid).\n\t\t*  ^\n\t\t* y| B C      \u2196H (Direction of rotation) \u2197C (Radial direction)\n\t\t*  | A D\n\t\t*  ------> x\n\t\t*/\n\tfunction interpolationR(p: Pair, wa: Pair, wd: Pair, wb: Pair, wc: Pair): Pair | null {\n\t\t// Find the ratio in the vertical direction\n\t\tlet v: number = -1;\n\n\t\t// Solve a v^2 + b v + c = 0\n\t\tconst ea: number = (wa[0] - wd[0]) * (wa[1] + wc[1] - wb[1] - wd[1]) - (wa[0] + wc[0] - wb[0] - wd[0]) * (wa[1] - wd[1]);\n\t\tconst eb: number = (p[0] - wa[0]) * (wa[1] + wc[1] - wb[1] - wd[1]) + (wa[0] - wd[0]) * (wb[1] - wa[1]) - (wa[0] + wc[0] - wb[0] - wd[0]) * (p[1] - wa[1]) - (wb[0] - wa[0]) * (wa[1] - wd[1]);\n\t\tconst ec: number = (p[0] - wa[0]) * (wb[1] - wa[1]) - (p[1] - wa[1]) * (wb[0] - wa[0]);\n\n\t\tif (eq0(ea)) {\n\t\t\tif (!eq0(eb)) v = -ec / eb;\n\t\t} else {\n\t\t\tconst rt: number = Math.sqrt(eb * eb - 4 * ea * ec);\n\t\t\tconst v1: number = (-eb + rt) / (2 * ea), v2 = (-eb - rt) / (2 * ea);\n\n\t\t\tif (wa[0] === wb[0] && wa[1] === wb[1]) {  // In this case, v1 is always 0, but this is not a solution.\n\t\t\t\tif (0 <= v2 && v2 <= 1) v = v2;\n\t\t\t} else {\n\t\t\t\tif      (0 <= v1 && v1 <= 1) v = v1;\n\t\t\t\telse if (0 <= v2 && v2 <= 1) v = v2;\n\t\t\t}\n\t\t}\n\t\tif (v < 0) return null;\n\n\t\t// Find the ratio in the horizontal direction\n\t\tlet h: number = -1, h1: number = -1, h2: number = -1;\n\t\tconst deX: number = (wa[0] - wd[0] - wb[0] + wc[0]) * v - wa[0] + wb[0];\n\t\tconst deY: number = (wa[1] - wd[1] - wb[1] + wc[1]) * v - wa[1] + wb[1];\n\n\t\tif (!eq0(deX)) h1 = ((wa[0] - wd[0]) * v + p[0] - wa[0]) / deX;\n\t\tif (!eq0(deY)) h2 = ((wa[1] - wd[1]) * v + p[1] - wa[1]) / deY;\n\n\t\tif      (0 <= h1 && h1 <= 1) h = h1;\n\t\telse if (0 <= h2 && h2 <= 1) h = h2;\n\n\t\tif (h < 0) return null;\n\n\t\treturn [h, v];\n\t}\n}\n\nfunction calcIdpHc([h0, c0]: Pair, [h1, c1]: Pair, r: number): Pair {\n\tif (Math.abs(h1 - h0) > MAX_HUE * 0.5) {\n\t\tif (h0 < h1) h0 += MAX_HUE;\n\t\telse if (h0 > h1) h1 += MAX_HUE;\n\t}\n\n\tlet h: number = (h1 - h0) * r + h0;\n\tif (MAX_HUE <= h) h -= MAX_HUE;\n\tlet c: number = (c1 - c0) * r + c0;\n\tif (c < MONO_LIMIT_C) c = 0;\n\treturn [h, c];\n}\n\n\n// -------------------------------------------------------------------------\n\n\nfunction mun2yxy([h, v, c]: Triplet): Triplet {\n\tif (MAX_HUE <= h) h -= MAX_HUE;\n\tconst Y: number = v2y(v);\n\tisSaturated = false;\n\n\t// When the lightness is 0 or achromatic (check this first)\n\tif (eq0(v) || h < 0 || c < MONO_LIMIT_C) {\n\t\tisSaturated = eq0(v) && 0 < c;\n\t\treturn [Y, ...ILLUMINANT_C];\n\t}\n\t// When the lightness is the maximum value 10 or more\n\tconst v_max = TBL_V.at(-1) as number;\n\tif (v_max <= v) {\n\t\tconst xy = scanXY(h, c, TBL_V.length - 1);\n\t\tisSaturated = (v_max < v);\n\t\treturn [Y, xy[0], xy[1]];\n\t}\n\tlet vi_l: number = -1;\n\twhile (TBL_V[vi_l + 1] <= v) ++vi_l;\n\tconst vi_u: number = vi_l + 1;\n\n\t// Obtain lower side\n\tlet xy_l: [number, number, boolean];\n\tif (vi_l !== -1) {\n\t\txy_l = scanXY(h, c, vi_l);\n\t} else {  // When the lightness of the lower side is the minimum 0, use standard illuminant.\n\t\txy_l = [...ILLUMINANT_C, false];\n\t\tisSaturated = true;\n\t}\n\t// Obtain upper side\n\tconst xy_u = scanXY(h, c, vi_u);\n\n\tconst v_l: number = ((vi_l === -1) ? 0 : TBL_V[vi_l]);\n\tconst v_u: number = TBL_V[vi_u];\n\tconst r: number = (v - v_l) / (v_u - v_l);\n\n\tif (!xy_l[2] && !xy_u[2]) {\n\t\tisSaturated = true;\n\t} else if (!xy_l[2] || !xy_u[2]) {\n\t\tif (r < 0.5) {\n\t\t\tif (!xy_l[2]) isSaturated = true;\n\t\t} else {\n\t\t\tif (!xy_u[2]) isSaturated = true;\n\t\t}\n\t}\n\tconst xy: Pair = div(xy_l as unknown as Pair, xy_u as unknown as Pair, r);\n\treturn [Y, ...xy];\n}\n\n// Obtain the hue and chroma for the chromaticity coordinates (h, c) on the surface of the given lightness index.\n// Return false if it is out of the range of the table.\nfunction scanXY(h: number, c: number, vi: number): [number, number, boolean] {\n\tconst ht: number = h * 10;\n\tconst p = [ht, c] as Pair;\n\n\tconst c_l: number = 0 | Math.floor(c / 2) * 2;\n\tconst c_u: number = c_l + 2;\n\n\tlet ht_l: number = 0 | Math.floor(ht / 25) * 25;\n\tlet ht_u: number = ht_l + 25;\n\tlet maxC_hl: number = 0;\n\tlet maxC_hu: number = 0;\n\n\tfor (; maxC_hl === 0; ht_l -= 25) {\n\t\tmaxC_hl = getMaxC(vi, ht_l);\n\t\tif (maxC_hl !== 0) break;\n\t}\n\tfor (; maxC_hu === 0; ht_u += 25) {\n\t\tmaxC_hu = getMaxC(vi, ht_u);\n\t\tif (maxC_hu !== 0) break;\n\t}\n\n\tif (c < maxC_hl && maxC_hu <= c) {\n\t\tfor (let c_c: number = maxC_hu; c_c <= maxC_hl - 2; c_c += 2) {\n\t\t\tif (inside(p, [ht_u, maxC_hu], [ht_l, c_c], [ht_l, c_c + 2])) {\n\t\t\t\tconst xy: Pair = interpolate3(vi, p, [ht_u, maxC_hu], [ht_l, c_c], [ht_l, c_c + 2]);\n\t\t\t\treturn [...xy, true];\n\t\t\t}\n\t\t}\n\t}\n\tif (maxC_hl <= c && c < maxC_hu) {\n\t\tfor (let c_c: number = maxC_hl; c_c <= maxC_hu - 2; c_c += 2) {\n\t\t\tif (inside(p, [ht_l, maxC_hl], [ht_u, c_c + 2], [ht_u, c_c])) {\n\t\t\t\tconst xy: Pair = interpolate3(vi, p, [ht_l, maxC_hl], [ht_u, c_c + 2], [ht_u, c_c]);\n\t\t\t\treturn [...xy, true];\n\t\t\t}\n\t\t}\n\t}\n\tif (maxC_hl <= c || maxC_hu <= c) {\n\t\tconst xy: Pair = interpolate2(vi, p, [ht_l, maxC_hl], [ht_u, maxC_hu]);\n\t\treturn [...xy, false];\n\t}\n\tconst xy: Pair = interpolate4(vi, p, [ht_l, c_l], [ht_u, c_l], [ht_u, c_u], [ht_l, c_u]);\n\treturn [...xy, true];\n\n\tfunction interpolate2(vi: number, p: Pair, a: Pair, b: Pair): Pair {\n\t\tconst rx: number = (p[0] - a[0]) / (b[0] - a[0]);\n\n\t\tconst wa = getXy(vi, ...a) as Pair;\n\t\tconst wb = getXy(vi, ...b) as Pair;\n\n\t\treturn div(wa, wb, rx);\n\t}\n\n\tfunction interpolate3(vi: number, p: Pair, a: Pair, b: Pair, c: Pair): Pair {\n\t\t// Barycentric coordinates for 2D interpolation\n\t\tconst f: number = (b[1] - c[1]) * (a[0] - c[0]) + (c[0] - b[0]) * (a[1] - c[1]);\n\t\tconst w1: number = ((b[1] - c[1]) * (p[0] - c[0]) + (c[0] - b[0]) * (p[1] - c[1])) / f;\n\t\tconst w2: number = ((c[1] - a[1]) * (p[0] - c[0]) + (a[0] - c[0]) * (p[1] - c[1])) / f;\n\t\tconst w3: number = 1 - w1 - w2;\n\n\t\tconst wa = getXy(vi, ...a) as Pair;\n\t\tconst wb = getXy(vi, ...b) as Pair;\n\t\tconst wc = getXy(vi, ...c) as Pair;\n\n\t\treturn [\n\t\t\twa[0] * w1 + wb[0] * w2 + wc[0] * w3,\n\t\t\twa[1] * w1 + wb[1] * w2 + wc[1] * w3,\n\t\t];\n\t}\n\n\t// d c\n\t// a b\n\tfunction interpolate4(vi: number, p: Pair, a: Pair, b: Pair, c: Pair, d: Pair): Pair {\n\t\tconst rx: number = (p[0] - a[0]) / (b[0] - a[0]);\n\t\tconst ry: number = (p[1] - a[1]) / (d[1] - a[1]);\n\n\t\tconst wa = getXy(vi, ...a) as Pair;\n\t\tconst wb = getXy(vi, ...b) as Pair;\n\t\tconst wc = getXy(vi, ...c) as Pair;\n\t\tconst wd = getXy(vi, ...d) as Pair;\n\n\t\t// Checking (wa === wb) in case both are ILLUMINANT_C.\n\t\tconst wab: Pair = (wa === wb) ? wa : div(wa, wb, rx);\n\t\tconst wdc: Pair = div(wd, wc, rx);\n\n\t\treturn div(wab, wdc, ry);\n\t}\n}\n\n\n// XYZ ---------------------------------------------------------------------\n\n\n/**\n * Convert CIE 1931 XYZ to Munsell (HVC).\n * @param {Triplet} xyz XYZ color (standard illuminant D65).\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Munsell color.\n */\nexport function fromXYZ(xyz: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst r = yxy2mun(xyz2yxy(xyz2c(xyz, dest), dest));\n\tdest[0] = r[0];\n\tdest[1] = r[1];\n\tdest[2] = r[2];\n\treturn dest;\n}\n\n/**\n * Convert Munsell (HVC) to CIE 1931 XYZ.\n * @param {Triplet} hvc Hue, value, chroma of Munsell color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} XYZ color.\n */\nexport function toXYZ([h, v, c]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\treturn c2xyz(yxy2xyz(mun2yxy([h, v, c]), dest), dest);\n}\n\n\n// -------------------------------------------------------------------------\n\n\n/**\n * Convert name-based hue expression to hue value.\n * If the Name-based hue expression is N, -1 is returned.\n * @param {string} hueName Name-based hue expression\n * @return {number} Hue value\n */\nexport function hueNameToHueValue(hueName: string): number {\n\tif (hueName.length === 1) return -1;  // In case of achromatic color N\n\n\tfunction isDigit(s: string) { return Number.isInteger(parseInt(s)); }\n\tconst len = isDigit(hueName.charAt(hueName.length - 2)) ? 1 : 2;  // Length of color name\n\tconst n = hueName.substring(hueName.length - len);\n\n\tlet hv = parseFloat(hueName.substring(0, hueName.length - len));\n\thv += HUE_NAMES.indexOf(n) * 10;\n\tif (MAX_HUE <= hv) hv -= MAX_HUE;\n\treturn hv;\n}\n\n/**\n * Convert hue value to name-based hue expression.\n * If the hue value is -1, or if the chroma value is 0, N is returned.\n * @param {number} hue Hue value\n * @param {number} chroma Chroma value\n * @return {string} Name-based hue expression\n */\nexport function hueValueToHueName(hue: number, chroma: number): string {\n\tif (hue === -1 || eq0(chroma)) return 'N';\n\tif (hue <= 0) hue += MAX_HUE;\n\tlet h10 = (0 | hue * 10) % 100;\n\tlet c = 0 | (hue / 10);\n\tif (h10 === 0) {\n\t\th10 = 100;\n\t\tc -= 1;\n\t}\n\treturn (Math.round(h10 * 10) / 100) + HUE_NAMES[c];\n}\n\n/**\n * Returns the string representation of Munsell numerical representation.\n * @param {Triplet} hvc Hue, value, chroma of Munsell color\n * @return {string} String representation\n */\nexport function toString([h, v, c]: Triplet): string {\n\tconst str_v = Math.round(v * 10) / 10;\n\tif (c < MONO_LIMIT_C) {\n\t\treturn `N ${str_v}`;\n\t} else {\n\t\tconst hue = hueValueToHueName(h, c);\n\t\tconst str_c = Math.round(c * 10) / 10;\n\t\treturn `${hue} ${str_v}/${str_c}`;\n\t}\n}\n", "export const TBL_V = [0.2, 0.4, 0.6, 0.8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport const TBL_SRC_MIN = [\n\t[\n\t\t[0,404,164,-384,-203,-9,17],\n\t\t[1,451,183,-414,-224,-15,18],\n\t\t[2,501,204,-446,-249],\n\t\t[3,543,224,-460,-270],\n\t\t[4,592,246,-488,-294],\n\t\t[5,679,290,-515,-335],\n\t\t[6,837,375,-500,-395],\n\t\t[7,1000,480],\n\t\t[8,1290,740],\n\t\t[9,1430,970],\n\t\t[10,1495,1284],\n\t\t[11,1434,1459],\n\t\t[13,713,1414],\n\t\t[14,449,1145],\n\t\t[15,262,837,-602,486],\n\t\t[16,185,676,-627,-119],\n\t\t[17,144,584,-523,-277],\n\t\t[18,117,516,-443,-313],\n\t\t[19,97,458,-375,-341],\n\t\t[20,80,397,-297,-369],\n\t\t[21,68,332,-236,-339],\n\t\t[22,66,261,-180,-299],\n\t\t[23,72,226,-160,-271],\n\t\t[24,85,195,-155,-242],\n\t\t[25,97,177,-155,-226],\n\t\t[26,111,164,-159,-214],\n\t\t[27,121,157,-168,-205],\n\t\t[28,133,149,-178,-196,20,19],\n\t\t[29,147,143,-185,-192,16,22],\n\t\t[30,165,136,-197,-182,14,18,7,11,3,4,-2,-1],\n\t\t[31,192,130,-213,-173,9,17,5,10,3,5,1,2,0,2,0,1,1,0,1,0],\n\t\t[32,227,126,-241,-164,7,14,3,9,2,6,0,0,0,2,1,1,-1,0,1,0],\n\t\t[33,250,127,-259,-164,4,14,1,8,3,6,-1,1,1,1,0,1,0,0],\n\t\t[34,275,129,-281,-165,3,15,1,5,1,7,1,1,-1,1],\n\t\t[35,288,131,-293,-168,2,17,0,4,2,7,0,0],\n\t\t[36,300,134,-304,-171,1,15,1,7,1,6],\n\t\t[37,315,137,-317,-174,1,15,-1,8,2,3],\n\t\t[38,337,143,-333,-180,-3,15,-1,7],\n\t\t[39,370,152,-359,-189,-4,15,-2,6]\n\t],\n\t[\n\t\t[0,381,220,-356,-259,-8,11,-3,3,3,-5],\n\t\t[1,411,236,-372,-274,-12,10,-3,1,4,-3],\n\t\t[2,441,255,-384,-291,-18,7,-1,0],\n\t\t[3,466,272,-393,-306,-24,4,-2,-2],\n\t\t[4,490,289,-398,-320,-25,2,-10,-4],\n\t\t[5,534,324,-403,-350,-41,-2,-1,-1],\n\t\t[6,585,367,-395,-372,-76,-13],\n\t\t[7,638,420,-368,-388],\n\t\t[8,698,499],\n\t\t[9,729,588],\n\t\t[10,721,656],\n\t\t[11,659,700],\n\t\t[12,542,670],\n\t\t[13,423,590,-111,640],\n\t\t[14,358,528,-393,411],\n\t\t[15,312,482,-496,177],\n\t\t[16,277,445,-513,16],\n\t\t[17,258,423,-511,-103],\n\t\t[18,239,399,-489,-194],\n\t\t[19,226,380,-463,-259],\n\t\t[20,213,361,-430,-317],\n\t\t[21,196,332,-384,-330],\n\t\t[22,180,298,-329,-337],\n\t\t[23,173,275,-295,-330,66,28],\n\t\t[24,169,249,-264,-311,53,24],\n\t\t[25,169,236,-251,-300,43,26],\n\t\t[26,172,223,-242,-287,35,24],\n\t\t[27,176,213,-239,-275,31,22],\n\t\t[28,183,203,-240,-261,24,18,7,2],\n\t\t[29,190,196,-239,-253,21,16,8,8],\n\t\t[30,202,188,-243,-242,15,15,7,10,10,16,1,2,5,5,1,0,-1,1,-2,-2],\n\t\t[31,220,180,-248,-230,11,15,7,12,5,9,0,2,2,6,1,-2,-1,2,1,0,0,2,0,-2,0,1,0,1],\n\t\t[32,241,176,-259,-221,7,14,5,9,2,6,1,4,1,5,0,0,0,0,1,2,0,-1,0,1,-1,0,1,1],\n\t\t[33,259,177,-272,-220,5,13,3,8,2,4,0,8,2,1,-1,2,1,0,0,2,-1,-1,1,2,0,-2],\n\t\t[34,281,182,-290,-226,2,16,2,5,2,5,-1,6,3,3,-1,1,0,2,1,0],\n\t\t[35,296,185,-303,-228,2,15,1,5,0,4,1,6,2,3,-1,3,1,-1],\n\t\t[36,309,189,-314,-232,3,16,-2,3,2,2,0,10,1,3,-1,0],\n\t\t[37,320,193,-320,-235,0,14,0,5,0,1,0,9,0,2],\n\t\t[38,337,199,-330,-240,-3,14,-2,2,1,1,-3,12],\n\t\t[39,360,209,-346,-249,-4,12,-3,4,0,-3]\n\t],\n\t[\n\t\t[0,372,247,-345,-283,-7,7,-5,5,-2,1,-1,2],\n\t\t[1,391,260,-350,-293,-9,6,-7,3,-3,2,4,-6],\n\t\t[2,411,274,-353,-302,-13,3,-8,1,-2,3],\n\t\t[3,431,290,-360,-316,-15,2,-10,-2,-10,4],\n\t\t[4,447,305,-357,-326,-22,-2,-13,-3,-11,5],\n\t\t[5,474,332,-345,-342,-39,-9,4,-2,-35,5],\n\t\t[6,505,367,-337,-363,-36,-13,-7,-6],\n\t\t[7,526,397,-288,-353],\n\t\t[8,551,444,-203,-301],\n\t\t[9,563,491,-131,-248],\n\t\t[10,548,526],\n\t\t[11,502,531,40,12],\n\t\t[12,432,501,38,221],\n\t\t[13,377,468,-151,233],\n\t\t[14,342,442,-274,111],\n\t\t[15,315,420,-356,-48,-278,295],\n\t\t[16,292,399,-376,-146,-252,220],\n\t\t[17,281,388,-387,-215,-212,155],\n\t\t[18,270,376,-388,-259,-162,72],\n\t\t[19,259,363,-381,-286,-117,24],\n\t\t[20,247,349,-370,-309,-69,-4],\n\t\t[21,236,334,-355,-327,-34,-14],\n\t\t[22,221,311,-330,-338,6,-14],\n\t\t[23,213,295,-313,-336,17,-2],\n\t\t[24,206,276,-296,-331,26,10],\n\t\t[25,202,260,-281,-318,27,13,-2,-1],\n\t\t[26,202,245,-270,-303,22,16,2,-3],\n\t\t[27,204,235,-265,-292,17,15,5,2],\n\t\t[28,209,227,-265,-282,18,11,7,7],\n\t\t[29,215,221,-264,-277,14,13,10,11,8,10,7,9],\n\t\t[30,223,215,-264,-270,11,13,9,12,8,11,5,7,2,3,1,1,-1,0,1,0,1,2],\n\t\t[31,239,208,-270,-261,11,15,8,13,4,7,3,6,1,3,1,1,0,0,0,1,1,2,0,0,0,-1,0,0,0,2],\n\t\t[32,257,204,-277,-251,8,14,3,7,4,10,2,4,-1,0,2,4,0,0,0,1,0,1,1,1,0,-1,-1,0,0,0],\n\t\t[33,272,205,-286,-250,6,14,2,6,2,9,2,3,-1,-2,1,8,1,-2,-1,3,1,0,0,1,0,-1,0,-1],\n\t\t[34,287,207,-294,-248,1,11,2,4,2,10,0,2,0,-1,1,6,0,-1,0,5,0,-2,1,3],\n\t\t[35,301,211,-306,-252,1,12,0,3,0,9,1,2,1,-1,0,5,1,4,0,0],\n\t\t[36,311,214,-314,-254,1,11,0,3,0,8,1,4,-1,-4,1,9,0,0],\n\t\t[37,322,218,-320,-257,-1,11,0,2,-1,7,0,5,0,-5,-1,8],\n\t\t[38,337,226,-327,-263,-3,7,-2,6,-1,3,-1,6,1,-4,-1,7],\n\t\t[39,355,236,-337,-272,-4,6,-4,6,-1,2,-2,4,1,-1]\n\t],\n\t[\n\t\t[0,365,261,-337,-292,-6,4,-2,1,-8,9,0,0,-1,1],\n\t\t[1,381,272,-341,-299,-6,1,-6,2,-9,6,0,0,-4,2],\n\t\t[2,399,286,-348,-311,-5,1,-6,1,-11,6,-3,0],\n\t\t[3,411,297,-345,-318,-9,0,-7,0,-10,3,-4,1],\n\t\t[4,423,309,-338,-322,-15,-3,-13,-5,-7,2,-10,-3],\n\t\t[5,445,333,-332,-336,-34,-7,-1,-4,9,-4,-14,3],\n\t\t[6,463,361,-314,-346,-40,-15,-4,-4],\n\t\t[7,475,386,-287,-342,-34,-24],\n\t\t[8,481,411,-213,-288],\n\t\t[9,479,439,-138,-238],\n\t\t[10,465,457,-39,-124],\n\t\t[11,434,460,12,16],\n\t\t[12,397,448,-33,102],\n\t\t[13,363,425,-170,57],\n\t\t[14,336,410,-272,-82,-39,200],\n\t\t[15,314,394,-323,-175,-59,137,-288,307],\n\t\t[16,298,381,-342,-225,-60,98,-202,175],\n\t\t[17,287,371,-349,-254,-61,55,-192,135],\n\t\t[18,280,363,-355,-279,-48,22,-144,78],\n\t\t[19,272,355,-353,-296,-37,3,-98,23],\n\t\t[20,265,346,-352,-310,-21,-10,-62,-6],\n\t\t[21,253,332,-343,-322,-3,-11,-39,-10],\n\t\t[22,241,315,-332,-331,13,-8,-12,-12],\n\t\t[23,230,296,-315,-328,17,1,-1,-4],\n\t\t[24,223,280,-300,-323,17,5,7,3],\n\t\t[25,220,271,-291,-320,16,8,9,7],\n\t\t[26,218,258,-282,-309,16,7,11,8],\n\t\t[27,220,249,-280,-302,15,10,12,10,0,2],\n\t\t[28,222,241,-276,-295,14,12,9,9,5,4],\n\t\t[29,225,234,-272,-287,11,10,11,10,6,9,3,1],\n\t\t[30,234,226,-276,-278,10,10,11,12,5,11,2,-4,4,8,3,4,2,3,-1,0],\n\t\t[31,247,221,-278,-272,9,12,7,12,6,12,1,-2,1,1,2,6,2,3,0,0,-1,0,1,0,1,2,0,1,0,0,1,1],\n\t\t[32,263,219,-284,-268,8,16,4,8,4,10,0,-1,1,3,1,2,0,4,2,0,-1,0,1,1,-1,2,1,-1,0,2,0,-1,0,0,0,2],\n\t\t[33,277,220,-290,-266,4,16,2,6,4,9,0,0,-1,1,2,2,1,5,-1,0,1,1,0,0,0,2,-1,-2,2,4,-1,-2,1,1,0,-1],\n\t\t[34,292,224,-301,-269,5,17,0,4,-2,9,3,-2,0,2,2,4,-1,4,0,1,1,-1,0,2,1,0,-1,1,0,-1],\n\t\t[35,304,228,-310,-272,2,16,1,4,2,10,-2,-3,0,0,2,5,-1,6,1,0,0,0,0,1,1,0],\n\t\t[36,312,232,-314,-275,1,16,0,2,0,11,0,-3,-1,0,1,6,0,4,1,1,0,0,0,0],\n\t\t[37,322,236,-318,-277,-2,14,-1,3,-1,9,1,-3,-1,0,1,9,-1,2,0,0,0,2],\n\t\t[38,336,243,-325,-280,-3,10,-1,2,-3,10,0,-4,-1,4,0,4,-1,3,-1,3],\n\t\t[39,350,251,-331,-285,-4,7,-2,2,-5,9,0,-1,0,0,-2,6]\n\t],\n\t[\n\t\t[0,363,271,-334,-300,-6,4,-2,0,-5,4,-1,1,-3,5,-3,3],\n\t\t[1,377,282,-337,-307,-5,1,-6,1,-4,3,2,-1,-12,8],\n\t\t[2,391,293,-340,-313,-4,-1,-8,-1,-7,2,3,-3],\n\t\t[3,402,303,-338,-317,-6,-5,-10,-2,-9,1,4,-5],\n\t\t[4,413,315,-333,-323,-15,-7,-5,-6,-12,0,-3,-2],\n\t\t[5,426,334,-321,-331,-31,-13,-7,-11,-12,-6,-4,-4],\n\t\t[6,438,358,-310,-336,-38,-18,-10,-3,13,-1],\n\t\t[7,443,378,-301,-334,-42,-24],\n\t\t[8,445,398,-299,-332],\n\t\t[9,436,418,-291,-331],\n\t\t[10,423,427,-281,-311],\n\t\t[11,404,429,-265,-288],\n\t\t[12,380,421,-259,-242],\n\t\t[13,354,409,-269,-203,-44,-98],\n\t\t[14,336,398,-295,-202,-20,-50],\n\t\t[15,315,384,-317,-230,-21,14,-32,70],\n\t\t[16,301,372,-330,-254,-20,31,-64,95,-10,-62],\n\t\t[17,291,363,-337,-277,-28,27,-35,15,25,-42],\n\t\t[18,283,356,-337,-290,-28,12,-9,-7,15,-22],\n\t\t[19,276,348,-336,-299,-22,5,1,-11,8,-9],\n\t\t[20,269,341,-334,-310,-14,-1,5,-16,5,-6],\n\t\t[21,260,329,-332,-317,1,-8,2,-3,4,-3],\n\t\t[22,250,314,-325,-326,9,-4,3,-6,3,-5],\n\t\t[23,243,302,-316,-327,9,-3,8,-3],\n\t\t[24,236,288,-306,-326,11,1,12,4],\n\t\t[25,232,278,-299,-324,14,5,12,5],\n\t\t[26,229,268,-291,-319,16,9,9,6,8,0],\n\t\t[27,229,258,-286,-311,15,12,9,5,7,5],\n\t\t[28,231,249,-284,-301,14,11,8,7,7,6],\n\t\t[29,236,242,-282,-293,10,9,9,9,6,7,6,4,2,10],\n\t\t[30,243,237,-285,-287,9,8,10,9,7,8,4,8,7,7,-1,0,4,4,-2,0,2,2,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,-1,0],\n\t\t[31,255,231,-287,-280,9,9,10,12,6,9,3,4,2,4,0,0,1,5,0,-1,1,2,-1,0,1,1,0,0,-1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n\t\t[32,268,228,-290,-273,5,9,7,12,3,4,2,4,2,4,0,1,1,3,1,1,0,2,-1,-1,1,1,1,0,-1,1,1,1,0,1,0,-1,0,1,0,1,-1,-1,1,0,0,0,0,0],\n\t\t[33,281,230,-295,-273,4,12,3,5,1,7,1,2,2,4,0,2,1,3,1,0,-1,1,1,2,-1,-1,2,1,-1,0,1,1,-1,2,0,0,1,-1,0,1,0,0],\n\t\t[34,294,233,-303,-273,3,10,1,5,1,5,1,3,1,2,0,4,0,3,1,0,0,0,0,3,1,-2,-1,2,0,-1,1,2],\n\t\t[35,303,236,-307,-275,1,10,0,4,1,5,-1,3,2,1,-1,5,1,3,0,0,0,0,1,2,-1,-1],\n\t\t[36,313,240,-313,-277,0,8,-2,3,1,6,0,3,0,1,1,5,-1,2,1,0,-1,1,0,1],\n\t\t[37,324,246,-319,-282,-2,7,-1,3,-1,6,0,3,0,1,-1,4,0,2,-1,0,1,1],\n\t\t[38,338,254,-326,-288,-3,6,-2,2,0,6,-3,2,0,4,-1,2,-1,2,1,-3],\n\t\t[39,350,262,-329,-294,-5,6,-2,1,-2,4,-1,3,-2,3,-2,3]\n\t],\n\t[\n\t\t[0,353,296,-321,-314,-3,1,0,-2,-4,1,-2,0,-1,1,-4,2,-3,2],\n\t\t[1,361,303,-320,-316,-4,-1,2,-3,-5,1,-2,-2,-3,1,-1,1],\n\t\t[2,369,311,-320,-319,-3,-2,4,-3,-8,-4,-5,1,0,-2,-8,1],\n\t\t[3,375,318,-316,-319,-5,-4,1,-4,-3,-7,-8,-1,-4,-1,-5,0],\n\t\t[4,381,327,-314,-321,-6,-6,1,-7,-8,-7,-6,-4,-4,-3,-9,2],\n\t\t[5,385,337,-310,-323,-7,-7,4,-6,-13,-10,0,-1,2,-7,-16,3],\n\t\t[6,388,348,-309,-322,-3,-7,1,-6,-13,-4],\n\t\t[7,389,359,-309,-322,-1,-6,-7,-2],\n\t\t[8,387,369,-306,-321,-4,-7,-10,-6],\n\t\t[9,383,379,-303,-319,-5,-13,-9,-7],\n\t\t[10,376,384,-298,-311,-6,-11],\n\t\t[11,366,386,-292,-300,-4,-11],\n\t\t[12,356,385,-293,-291,0,3],\n\t\t[13,342,380,-296,-285,0,20,-4,11],\n\t\t[14,331,374,-304,-283,-1,19,-1,25,-16,-20],\n\t\t[15,317,365,-309,-284,-7,11,-11,21,-9,4,-4,-6,-8,20],\n\t\t[16,307,358,-315,-292,-6,7,-8,14,-10,10,-8,2,-10,-3,-30,26,-11,-10],\n\t\t[17,298,351,-320,-302,-5,3,-3,0,-12,14,-4,-5,-3,-6,0,-5,-4,2],\n\t\t[18,292,345,-320,-305,-4,-2,-2,-3,-8,5,-2,-2,1,-5,2,-3,-2,-4],\n\t\t[19,287,340,-320,-309,-1,-4,-2,-1,-4,1,-2,-2,3,-4,4,-3,-3,-1],\n\t\t[20,282,334,-320,-312,3,-4,-3,-1,-1,-2,0,-3,6,-3,2,-3,-5,2],\n\t\t[21,277,327,-320,-316,6,-4,-4,0,4,-4,3,0,5,-2,2,-1,-4,1],\n\t\t[22,270,318,-317,-321,8,-1,-4,-3,7,-1,8,0,2,0,3,2],\n\t\t[23,265,310,-314,-322,8,-1,-1,-1,8,1,7,3,5,-1,0,2],\n\t\t[24,261,301,-312,-323,8,0,2,-2,8,4,8,1,7,6],\n\t\t[25,258,294,-310,-323,8,0,5,1,7,3,8,7],\n\t\t[26,256,287,-307,-322,8,-1,6,3,9,6,8,7],\n\t\t[27,255,280,-304,-320,9,3,5,3,9,7,9,9,-1,0],\n\t\t[28,256,273,-302,-315,8,5,6,3,8,9,7,5,1,2],\n\t\t[29,259,268,-300,-311,6,4,6,6,8,8,5,5,1,1,5,6,2,1],\n\t\t[30,264,262,-302,-305,6,5,7,6,6,7,5,6,3,1,3,5,2,3,3,4,-1,0,0,0,2,2,1,2,0,0,0,0,-1,-1,1,1,-1,-1,1,0,-1,0,1,0,-1,0],\n\t\t[31,271,258,-300,-301,6,7,5,7,5,5,6,7,2,4,2,1,0,2,2,3,-1,-1,1,3,0,0,1,1,-1,0,1,0,-1,1,1,0,-1,0,1,0,0,0,0,0,-1,0,1,0,-1,0],\n\t\t[32,280,257,-300,-298,4,9,1,3,6,7,3,6,1,2,1,2,1,2,1,1,0,1,0,2,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,-1,0,1,0,0,0,-1,0,1,0],\n\t\t[33,289,258,-302,-295,3,8,1,1,2,6,2,5,1,2,0,3,2,1,-1,2,1,1,0,0,0,2,1,-1,-1,1,1,1,0,2,0,-1,0,1,1,0,-1,0,0,0],\n\t\t[34,298,261,-305,-296,1,8,0,-1,2,7,0,3,1,2,0,5,1,0,0,1,1,1,-1,1,1,0,0,2,0,-2,0,2,0,2,0,0],\n\t\t[35,307,265,-309,-298,0,7,-1,-2,1,7,0,3,0,3,0,2,1,2,0,1,0,0,0,2,0,0,0,-1,-1,0],\n\t\t[36,316,269,-313,-299,-1,4,-1,-1,0,7,-1,2,1,2,-1,2,-1,2,1,2,0,0,-1,0,1,2,0,-2],\n\t\t[37,328,275,-318,-300,-1,1,0,-2,-3,6,-1,2,-1,1,0,3,-1,2,-1,1,1,-1,0,2,-1,0],\n\t\t[38,338,283,-320,-306,-3,1,0,-2,-4,4,0,2,-1,2,-1,1,-2,4,1,-2,-2,2],\n\t\t[39,346,289,-322,-310,-2,2,0,-2,-4,1,-2,2,-2,2,-2,2,-1,0,1,0]\n\t],\n\t[\n\t\t[0,353,307,-317,-317,-3,-1,0,-1,-3,0,-1,-1,-5,1,1,-1,-4,1,-3,0],\n\t\t[1,359,313,-316,-318,-4,-2,2,-2,-4,-2,-2,-1,-6,1,0,-1,-1,-2,-1,-1],\n\t\t[2,365,319,-315,-319,-6,-2,3,-4,-3,-3,-6,-3,-6,1,0,-2,-2,-2,-2,-2],\n\t\t[3,369,325,-314,-320,-5,-3,1,-4,-3,-4,-5,-5,-10,-1,0,-2,-1,-2,1,-4],\n\t\t[4,373,331,-315,-321,-4,-4,0,-5,-6,-5,-3,-4,-7,-3,-5,0,3,-1,3,-4],\n\t\t[5,376,339,-316,-322,-1,-4,-6,-5,-7,-3,-3,-6,-6,-1,-3,-3],\n\t\t[6,377,348,-316,-324,-2,-5,-10,-6,-5,-3,-5,-1],\n\t\t[7,377,355,-316,-323,-6,-7,-9,-6,-4,-2],\n\t\t[8,375,363,-316,-324,-6,-8,-9,-8,-3,-4],\n\t\t[9,370,370,-312,-323,-8,-11,-7,-7,-4,-6],\n\t\t[10,365,375,-311,-322,-6,-10,-6,-5],\n\t\t[11,359,378,-309,-318,-6,-9,-5,-5],\n\t\t[12,351,379,-306,-313,-6,-8,-4,-6],\n\t\t[13,341,377,-305,-306,-6,-8,-5,2,-2,-3],\n\t\t[14,332,373,-309,-303,-3,-2,-3,4,-5,-5,-3,1],\n\t\t[15,318,364,-309,-299,-3,3,-5,5,-8,2,-5,0,-3,-2],\n\t\t[16,309,358,-313,-304,-2,6,-4,4,-7,3,-2,0,-6,5,-1,-7,-8,8,-4,-5,-3,-2,-2,-2],\n\t\t[17,300,350,-316,-308,-4,0,0,-1,-7,5,0,-3,0,-2,-2,-4,0,-2,-4,1,0,-2,3,-5],\n\t\t[18,294,344,-317,-310,-1,-2,0,-4,-5,2,1,-3,0,-2,2,-4,2,-1,-2,-1,-2,2,-2,0],\n\t\t[19,289,339,-316,-311,0,-5,1,-3,-3,1,1,-1,2,-4,2,-1,2,-2,-1,0,-1,0,-3,0],\n\t\t[20,284,334,-315,-314,2,-4,2,-2,-1,-1,0,0,3,-4,2,0,2,-3,2,-1,-1,0,-4,1],\n\t\t[21,280,327,-316,-315,5,-4,3,-2,-2,-1,4,-1,2,-1,3,-1,2,-1,2,1,1,-2,-4,1],\n\t\t[22,274,319,-314,-318,8,-2,0,-2,3,-1,4,-1,3,1,2,-1,4,1,1,1,0,-2],\n\t\t[23,270,312,-313,-320,9,0,3,-1,2,0,5,2,2,-1,4,1,2,0,2,0],\n\t\t[24,266,305,-310,-321,8,-1,5,2,1,-1,7,3,1,0,7,4,3,2],\n\t\t[25,264,298,-310,-321,11,2,3,0,3,1,6,3,4,1,4,6],\n\t\t[26,262,292,-306,-321,10,4,3,-1,4,2,5,4,4,2,3,5],\n\t\t[27,262,286,-304,-318,10,4,2,1,6,4,3,1,3,4,6,5],\n\t\t[28,263,280,-301,-313,6,3,5,4,4,3,3,1,4,5,4,3,1,-1],\n\t\t[29,266,276,-301,-311,6,4,5,4,4,4,2,3,3,2,3,3,1,1,4,4,0,0],\n\t\t[30,271,272,-303,-308,5,5,6,6,2,1,3,4,3,2,2,2,2,4,3,2,1,2,0,0,2,3,1,0,-1,1,1,-1,0,2,1,1,-1,-1,1,0,0,1,0,0,0,0,0,-1,0,0],\n\t\t[31,278,269,-304,-306,5,6,5,6,2,3,3,3,3,3,3,2,1,4,1,2,1,-1,0,2,0,2,1,0,0,0,0,0,1,2,-2,-1,1,0,1,1,-1,0,1,0,0,0,-1,0,1,0],\n\t\t[32,285,267,-304,-302,4,6,3,5,1,2,4,6,0,0,2,3,2,3,0,1,0,1,1,0,0,2,1,0,0,1,0,-1,0,2,-1,0,2,0,-1,0,1,0,-1,1,1,0,0,0,0,0],\n\t\t[33,292,268,-305,-302,3,7,3,5,0,1,2,5,0,1,1,2,1,2,0,2,1,0,0,1,0,2,0,-1,0,1,1,1,0,0,0,-1,0,2,0,0,1,-1,-1,2,0,-1],\n\t\t[34,300,270,-307,-301,1,6,1,2,0,3,2,3,0,3,0,1,1,2,0,2,0,0,0,0,1,2,0,0,0,1,0,0,0,-1,0,2,0,0,0,0,0,0],\n\t\t[35,309,274,-311,-303,1,5,-1,1,0,4,0,2,1,3,0,2,0,0,0,3,0,0,0,0,1,1,-1,0,0,2,1,-2,-1,1,0,1,0,0],\n\t\t[36,317,279,-313,-306,-1,4,0,2,-1,2,-1,2,0,2,0,4,0,-2,-1,4,1,0,-1,0,0,1,1,-2,-1,3,0,-2,0,0],\n\t\t[37,327,286,-314,-310,-3,5,0,-1,-2,2,-1,3,0,1,-1,1,-1,1,-1,2,1,-1,-2,3,0,0,3,-4,-3,4],\n\t\t[38,337,294,-315,-314,-4,3,-2,0,-2,1,-1,1,-2,0,0,2,-3,2,0,0,1,-3,-4,5,2,0],\n\t\t[39,345,300,-316,-315,-4,1,-1,-1,-2,1,-2,-1,-2,2,-2,0,-2,1,1,1,-1,-2]\n\t],\n\t[\n\t\t[0,342,311,-312,-318,-2,0,0,-1,-3,0,1,-1,-3,-1,-2,1,3,-2,-4,1,-5,2,1,-2],\n\t\t[1,346,315,-311,-317,-2,-2,0,-2,-3,0,0,-1,0,-2,-5,0,3,-1,-3,1,-7,0,3,1],\n\t\t[2,351,320,-310,-318,-3,-1,1,-3,-4,-1,0,-2,-1,-2,-3,-1,-2,-2,-4,0,-5,2,1,-2],\n\t\t[3,354,324,-309,-318,-2,-2,0,-2,-4,-3,-3,-2,0,-2,-6,-3,-2,-1,-1,-2,-5,3,1,-3],\n\t\t[4,358,329,-308,-317,-4,-3,0,-3,-4,-4,-4,-1,-3,-3,-9,-2,4,-1,-3,1,1,-2,2,0],\n\t\t[5,362,337,-310,-320,-5,-4,-1,-2,-5,-3,-8,-3,0,0,-8,-1,5,0],\n\t\t[6,365,344,-311,-320,-8,-6,-4,-5,-6,-2,-6,-4,0,-1],\n\t\t[7,366,350,-311,-319,-10,-9,-7,-5,-6,-3,-9,-3,5,0],\n\t\t[8,366,359,-313,-323,-10,-10,-8,-6,-7,-4,-8,-5],\n\t\t[9,363,365,-312,-322,-11,-12,-7,-7,-8,-7,-8,-5],\n\t\t[10,359,370,-311,-321,-10,-13,-8,-10,-9,-4,-5,-9],\n\t\t[11,354,373,-310,-319,-9,-12,-8,-12,-6,-6,-8,-9],\n\t\t[12,348,373,-309,-314,-7,-11,-8,-13,-5,-7,-8,-9],\n\t\t[13,338,371,-305,-309,-7,-9,-6,-9,-4,-6,-6,-12],\n\t\t[14,331,368,-308,-308,-5,-3,-3,-4,-4,-6,-2,-13,-1,6],\n\t\t[15,319,360,-310,-304,-1,2,-4,3,-4,-5,-5,0,-3,-5,-4,8,0,-7],\n\t\t[16,311,355,-312,-308,-2,6,-3,1,-4,4,-5,3,-2,-3,0,-8,-4,7,-8,10,2,-10,4,-10,-13,17,-12,8],\n\t\t[17,301,347,-313,-312,-3,5,-3,-2,-2,3,-3,1,1,-7,-1,-2,0,-1,1,-4,0,-1,-3,0,2,-2,-2,5,-8,6],\n\t\t[18,296,342,-314,-314,-2,1,-2,-1,-2,-2,-4,2,7,-8,-2,0,2,-1,4,-5,-1,0,-5,4,3,-3,-1,2,-2,-3],\n\t\t[19,292,337,-314,-314,-1,-1,-1,-2,0,0,-4,0,7,-6,0,0,1,0,4,-4,0,0,-3,1,0,0,0,-1,1,0],\n\t\t[20,288,333,-313,-316,-1,-1,1,-2,1,-1,-4,1,8,-4,1,-2,-1,0,4,-2,1,-1,0,0,0,1,-2,-1,2,0],\n\t\t[21,284,327,-313,-316,2,-3,0,0,0,-2,2,-1,4,-1,3,-1,0,0,3,-1,2,0,0,-1,0,1,0,-1],\n\t\t[22,280,321,-312,-319,2,-1,1,-2,2,0,3,-1,3,-1,3,0,2,0,1,0,3,0,3,2,-2,0],\n\t\t[23,276,315,-309,-319,1,-2,3,0,1,-2,4,1,3,0,4,2,2,0,3,0,1,1,2,1],\n\t\t[24,274,309,-310,-320,5,-1,0,-1,3,0,5,1,1,2,8,2,-2,-1,5,2,0,0],\n\t\t[25,273,304,-310,-321,6,1,0,-3,3,2,7,3,-1,-1,9,6,-4,-4,6,6],\n\t\t[26,272,299,-308,-320,6,0,0,-1,5,2,4,1,1,2,4,1,1,3],\n\t\t[27,273,295,-307,-320,5,2,1,-1,6,4,1,1,2,1,1,1,7,6],\n\t\t[28,275,291,-307,-317,5,2,0,-1,6,4,2,2,1,1,3,2,2,2,2,3],\n\t\t[29,278,288,-307,-316,4,2,1,1,5,5,1,1,2,0,3,3,1,2,2,1,2,1,2,5],\n\t\t[30,282,284,-308,-312,3,2,0,1,6,4,1,3,2,0,1,2,2,1,1,1,3,3,3,3,1,2,-1,1,1,0,1,1,0,0,0,-1,-2,-2,2,3],\n\t\t[31,286,282,-306,-311,1,3,2,1,3,4,2,3,2,2,2,1,2,2,0,0,3,5,0,0,1,1,0,1,0,1,0,-1,0,0,1,0,-1,1,0,0],\n\t\t[32,291,280,-306,-308,1,2,2,4,1,2,2,2,1,2,3,3,0,2,1,-1,1,4,0,1,0,-2,1,3,0,0,-1,-1,2,0,-1,1,0,0,-1,0],\n\t\t[33,296,281,-306,-309,0,5,3,2,0,2,1,2,1,3,1,0,0,2,0,1,2,3,0,0,-1,0,1,1,1,1,-1,-2,-1,1,1,1,0,-1,0,1],\n\t\t[34,302,283,-308,-309,0,4,2,2,-1,2,2,2,0,1,0,1,0,3,1,0,0,3,1,-1,-1,1,0,0,1,2,-1,-2,1,-1,0,4,0,-1,1,-1],\n\t\t[35,309,286,-310,-310,1,4,-1,1,0,2,0,2,0,0,0,1,0,2,0,2,0,1,0,1,1,-1,-1,1,0,0,0,1,0,-2,1,2,-1,1,0,-1],\n\t\t[36,316,290,-311,-311,-1,1,-1,3,0,1,-1,1,0,2,0,1,0,-1,-1,0,0,5,0,0,0,-1,-1,1,1,-1,0,1,0,1,-1,-1,1,1],\n\t\t[37,323,295,-312,-313,-1,1,-1,1,-1,2,-1,0,0,2,-1,0,0,0,0,0,-2,3,0,0,0,2,0,-2,1,-3,-2,5,-1,0],\n\t\t[38,331,301,-313,-315,0,0,-2,1,-3,2,1,-2,-1,2,-2,0,1,-1,-1,1,-2,2,-2,-1,2,0,-2,2,3,-3],\n\t\t[39,337,306,-313,-316,0,0,-2,-1,-3,1,0,-1,-1,1,-1,-1,0,0,-1,-1,-6,4,3,-2,0,-1]\n\t],\n\t[\n\t\t[0,333,313,-307,-317,0,-1,0,-1,-4,0,3,-2,-6,2,3,-2,-2,0,1,0,-7,0,2,2,-4,0,-1,1],\n\t\t[1,336,316,-306,-317,0,-1,-1,-1,-1,-1,1,-2,-6,1,2,-2,-1,-1,0,0,-9,1,-1,1,-1,0,-2,1],\n\t\t[2,339,319,-304,-316,-1,-1,-1,-2,1,-1,-2,-3,-5,1,3,-3,-2,0,-6,-1,-2,0,-6,1,0,1,-2,0],\n\t\t[3,343,323,-305,-317,-1,0,1,-2,-1,-3,-2,-2,-4,-1,0,-2,-5,-1,-3,-1,-1,1,-3,0,-7,0,4,0],\n\t\t[4,347,328,-306,-316,1,-2,-1,-2,-1,-3,-3,-2,-8,-3,-2,0,-1,-2,-1,-1,0,-1,-3,1,-3,-1],\n\t\t[5,351,334,-309,-319,2,0,-1,-3,-5,-4,-8,-1,-5,-3,-5,0,4,-1,-5,1],\n\t\t[6,353,340,-309,-319,1,-1,-4,-5,-8,-5,-7,-2,-4,-2,-2,-1,-3,-1],\n\t\t[7,354,345,-309,-319,0,-2,-7,-5,-9,-5,-6,-4,-6,-3,0,1],\n\t\t[8,355,351,-310,-318,-2,-4,-9,-8,-9,-6,-6,-4,-1,-3,-5,1],\n\t\t[9,353,357,-309,-319,-3,-4,-10,-11,-9,-7,-5,-3,-2,-3],\n\t\t[10,350,362,-308,-318,-4,-6,-10,-13,-8,-6,-5,-5,-1,-4],\n\t\t[11,347,364,-309,-316,-3,-5,-10,-13,-7,-9,-4,-6,-2,-1],\n\t\t[12,342,365,-308,-314,-3,-5,-7,-11,-8,-11,-4,-6,-2,-3],\n\t\t[13,335,364,-308,-314,-1,1,-5,-9,-8,-12,-2,-7,-4,-3],\n\t\t[14,329,361,-310,-312,-1,2,-2,-3,-5,-8,-3,-9,-2,-7,-3,-2],\n\t\t[15,319,356,-311,-313,0,6,-2,1,-2,1,-4,-5,-2,-7,0,-7,0,-1,-4,5],\n\t\t[16,311,351,-311,-314,0,5,-3,4,-2,2,-4,3,-1,-5,-4,3,-1,-1,-3,1,2,-8,-3,3,-4,2,-2,5,-4,0,1,-3],\n\t\t[17,303,345,-312,-316,-1,2,-3,2,-1,0,-4,3,0,-2,-2,1,-3,-1,3,-5,0,-1,1,-3,-1,-1,0,-1,-4,4,3,-4],\n\t\t[18,298,339,-312,-315,-1,-1,-3,2,0,-3,-5,3,4,-6,-2,2,0,-2,4,-4,-1,-1,-1,3,2,-4,0,1,-4,1,1,2],\n\t\t[19,295,336,-312,-317,-1,-2,-2,3,0,-4,-4,3,6,-4,-3,-1,1,1,4,-4,0,0,-1,0,2,-2,1,0,-4,1,-2,0],\n\t\t[20,291,331,-311,-316,1,-2,-3,1,2,-2,-5,2,7,-4,-2,0,1,0,3,-3,0,0,1,-1,3,-1,0,0,-4,2,-2,1],\n\t\t[21,288,327,-310,-317,1,-2,-3,1,1,-2,-1,-1,6,-2,-3,0,3,0,2,-2,1,0,3,0,2,-1,-1,1,0,-1,-4,1],\n\t\t[22,284,321,-309,-317,2,-2,-3,-1,1,-1,1,0,8,0,-5,-2,2,0,4,1,3,-1,1,1,2,-1,1,1,0,0],\n\t\t[23,281,316,-307,-317,0,-1,0,-3,1,0,1,0,6,0,-1,0,0,0,4,0,3,1,3,0,2,2],\n\t\t[24,280,311,-309,-318,1,-2,2,0,1,-1,2,0,5,2,-2,-1,2,0,4,1,1,2,5,1],\n\t\t[25,279,307,-309,-319,2,-1,2,0,1,-1,1,0,6,2,-1,0,4,1,-2,-1],\n\t\t[26,279,303,-309,-318,3,-3,1,0,3,1,1,-1,3,3,0,-1,4,2,3,2],\n\t\t[27,280,300,-309,-319,3,-1,2,1,2,0,1,0,3,3,1,-1,3,3,3,3],\n\t\t[28,282,297,-309,-318,2,0,2,0,2,2,2,0,1,3,2,-1,3,5,1,-2,0,3],\n\t\t[29,285,294,-310,-316,2,-1,2,2,2,1,1,1,3,3,1,-1,0,2,2,2,2,1,-1,0],\n\t\t[30,288,292,-310,-315,1,-1,2,3,1,1,2,2,1,1,2,0,1,2,2,1,2,4,-2,-3,2,2,1,1,2,1,-2,1],\n\t\t[31,292,291,-310,-315,0,-1,4,3,1,4,0,-1,1,2,3,2,0,1,2,1,3,3,-1,-1,0,2,2,1,-1,0,0,0,0,0],\n\t\t[32,296,291,-310,-316,1,0,1,5,3,2,-1,1,2,1,0,2,3,2,0,1,1,1,0,0,0,0,1,2,-1,-1,0,1,1,1,0,-1],\n\t\t[33,300,291,-310,-315,1,1,1,3,2,4,0,-1,1,3,1,1,0,2,0,0,0,1,1,0,1,2,-2,-2,2,3,-1,-2,0,1,1,0,0,2],\n\t\t[34,305,293,-311,-316,0,2,2,2,0,3,0,0,1,3,-1,0,2,1,-1,2,1,0,0,0,1,2,-1,0,-1,-1,0,0,2,1,-1,1,1,1,0,0],\n\t\t[35,310,296,-310,-317,-1,2,1,1,-1,3,0,0,1,2,-1,1,0,0,0,2,1,-1,-1,3,0,-1,1,1,-1,0,0,-1,1,1,-1,1,0,2,1,-2],\n\t\t[36,315,299,-310,-317,-1,0,0,1,-1,4,0,-1,-1,2,0,0,0,1,0,1,0,0,-1,2,1,-2,-1,3,0,-1,0,1,0,-2,0,1,0,3,0,-1],\n\t\t[37,320,302,-310,-317,0,0,-1,0,-2,3,1,0,-2,0,0,2,0,0,-1,0,0,0,0,3,-1,-2,0,1,0,0,0,1,-1,0,2,-2],\n\t\t[38,326,307,-310,-319,1,1,-1,0,-3,1,1,-1,-2,2,0,-1,-1,1,0,0,-1,1,0,-1,-2,1,-1,1,1,0,-1,0],\n\t\t[39,330,310,-308,-318,-1,0,-1,-1,-2,1,1,-1,-4,1,2,-1,-3,0,2,0,-4,1,1,0,-4,1,1,1,0,-1]\n\t],\n\t[\n\t\t[0,329,314,-307,-317,1,-1,-4,1,3,-2,-1,0,-2,-1,4,-1,-5,1,-1,-1,-3,1,0,0,-3,0,0,2],\n\t\t[1,332,317,-307,-318,1,1,-2,-2,1,0,0,-2,-3,0,3,-2,-3,1,-3,0,-3,-1,-3,0,1,1,-5,-1],\n\t\t[2,334,319,-305,-316,0,-1,-2,-1,2,-1,-1,-2,-2,0,2,-1,-3,-1,-5,-1,-2,0,-4,0,-3,1,3,-2,-3,0],\n\t\t[3,338,323,-307,-317,0,-1,1,-1,2,-1,-4,-1,1,-2,-2,-1,-2,-1,-7,-2,2,1,-8,0,-1,-1,2,-1,-3,0],\n\t\t[4,342,327,-307,-316,-2,-2,2,-1,1,-1,-2,-2,-2,-2,-5,-2,0,0,-4,-2,-1,0,-4,1,-3,-1,2,0,1,-2],\n\t\t[5,345,332,-309,-317,1,-2,-2,-2,1,-1,-3,-2,-6,-2,-6,-2,-3,-1,-2,-2,-6,2],\n\t\t[6,347,337,-310,-318,2,0,-3,-4,-3,-3,-5,-2,-6,-3,-4,-2,-6,-2,1,1],\n\t\t[7,349,342,-312,-319,1,0,-2,-5,-6,-2,-5,-5,-8,-3,-2,-1,-7,-3,1,-1],\n\t\t[8,349,348,-312,-319,1,-3,-5,-4,-6,-5,-6,-5,-6,-4,-4,-1,-3,-4],\n\t\t[9,348,354,-312,-321,0,-2,-4,-7,-8,-5,-7,-7,-4,-2,-3,-4,-3,-1],\n\t\t[10,346,358,-313,-320,2,-3,-6,-7,-8,-8,-7,-7,-1,-1,-5,-6],\n\t\t[11,343,360,-311,-320,-1,0,-5,-8,-7,-10,-6,-7,-2,-2,-4,-7],\n\t\t[12,340,361,-312,-319,0,0,-4,-6,-7,-10,-5,-9,-2,-2,-4,-8],\n\t\t[13,334,361,-311,-318,0,0,-2,-1,-6,-12,-4,-8,-3,-4,-4,-9],\n\t\t[14,329,359,-312,-317,-1,1,-1,1,-3,-6,-3,-8,-3,-7,-1,-8,-1,-2],\n\t\t[15,319,355,-310,-318,-2,3,0,5,-3,-2,-1,-3,-2,-1,-1,-10,-1,-7,0,-5,0,4],\n\t\t[16,311,350,-310,-318,0,4,-2,2,-2,1,-2,2,-3,3,-1,-4,-2,2,0,-4,-1,0,-3,6,2,-6,-4,5,-3,-1,3,-8],\n\t\t[17,304,344,-311,-318,-1,0,-1,2,-2,1,-1,-1,-2,4,-1,-2,-3,1,0,-1,0,-2,-2,1,0,-3,1,-1,-4,1,0,0,1,-1],\n\t\t[18,299,338,-311,-316,0,-2,-2,-1,0,0,-4,2,2,-3,-1,0,0,-1,-1,0,0,-1,0,0,1,-1,0,-1,-3,2,2,-3,-4,2],\n\t\t[19,296,334,-311,-316,0,-3,0,1,-1,-1,-2,1,1,-2,0,-1,-1,1,2,-1,0,-1,-1,-1,2,0,0,0,-3,0,2,0,-2,0],\n\t\t[20,293,330,-311,-316,2,-2,-1,0,0,0,-2,-1,3,0,-2,-2,1,1,0,-1,2,-1,-1,0,3,-2,0,0,-2,1,1,-1,-3,3],\n\t\t[21,290,327,-310,-317,3,-2,-3,-1,2,-1,-2,1,3,-2,-1,0,1,-1,1,0,1,-1,-1,0,3,0,4,-1,-3,1,0,-2],\n\t\t[22,287,322,-309,-318,1,-1,1,-1,0,0,0,-1,2,-1,1,1,1,-1,0,-1,0,-1,1,2,4,-1,4,0,-1,1],\n\t\t[23,285,317,-310,-317,3,-1,1,-1,0,-1,1,0,3,0,-1,0,2,-1,-1,0,1,0,2,1,4,-1],\n\t\t[24,284,313,-310,-318,2,-1,2,-1,1,0,0,-1,3,1,0,-1,2,1,-1,0,2,0,1,0],\n\t\t[25,284,310,-311,-319,1,-2,3,0,3,0,-2,-1,4,2,-1,-1,4,2,0,-1,1,-1],\n\t\t[26,284,306,-310,-318,0,-3,3,0,2,0,2,0,0,0,0,1,5,1,-1,2],\n\t\t[27,285,304,-310,-320,0,-1,3,0,2,0,0,0,3,1,-1,0,3,2,3,2,1,1],\n\t\t[28,287,301,-310,-318,-1,-2,3,1,2,1,-1,-2,3,3,-1,-1,4,3,3,3,2,2,-3,-2],\n\t\t[29,290,299,-312,-318,1,-1,1,1,3,1,-2,-1,3,2,0,-1,5,5,0,1,1,2,0,-1],\n\t\t[30,292,298,-311,-318,-1,-2,3,3,1,1,-1,-1,1,1,0,0,7,7,-2,-2,3,2,0,0,-1,0],\n\t\t[31,296,296,-312,-317,0,-1,3,4,0,0,-1,-1,2,1,-1,1,6,5,0,0,1,1,0,1,-1,-3],\n\t\t[32,299,296,-312,-317,1,-1,2,4,0,1,0,-1,1,2,1,-1,2,6,-1,-2,1,2,2,2,-1,-3,0,2],\n\t\t[33,302,296,-311,-316,0,-1,2,3,0,1,2,2,-1,1,2,0,-1,3,1,-2,0,2,1,1,-1,-1,0,2,1,-1,0,1],\n\t\t[34,305,297,-310,-316,0,0,1,2,-1,1,2,2,-1,0,1,1,0,2,0,-1,0,-1,1,4,0,-1,-1,0,1,1,0,1,0,0,0,2],\n\t\t[35,311,299,-311,-315,-1,-2,1,3,-1,0,1,2,-1,1,1,0,0,1,-1,-1,0,1,1,2,-1,-2,0,3,0,-2,0,2,0,1,1,1],\n\t\t[36,315,302,-312,-317,2,0,-2,1,0,1,0,1,0,-1,-1,3,0,0,0,-2,0,3,-1,0,1,-1,-1,1,1,2,-1,-1,0,1,0,1],\n\t\t[37,319,305,-311,-317,1,-1,-1,2,-1,0,0,-1,0,2,0,-1,-2,2,1,-1,-1,2,0,-1,-1,1,0,1,1,-1,-1,1,-1,1,0,1],\n\t\t[38,323,309,-309,-318,1,-1,-2,2,-1,0,1,-1,-1,-1,0,2,-1,-1,1,-1,-4,4,-1,-1,3,-1,-4,2,0,1,1,-2],\n\t\t[39,326,311,-308,-316,2,-2,-5,1,2,-1,0,-1,-1,1,0,-2,-3,2,3,-2,-4,3,-2,-1,-1,1,-1,0,-2,1]\n\t],\n\t[\n\t\t[0,326,315,-307,-317,1,-1,0,0,-1,-1,3,-1,-2,0,-1,0,-1,0,-3,1,-2,-1,2,-2],\n\t\t[1,328,317,-306,-317,1,0,0,-1,-1,-1,4,0,-4,-2,1,0,-5,0,-2,0,-3,-1,4,1],\n\t\t[2,331,319,-307,-316,2,-1,0,0,-1,-2,3,-1,-3,0,0,-2,-5,0,-3,0,-1,-1,1,-1],\n\t\t[3,334,322,-307,-316,1,0,3,-2,-4,-1,4,0,-3,-2,0,-1,-8,-2,-1,0,0,-1,-4,0,0,0],\n\t\t[4,336,325,-305,-314,0,-2,2,-1,-4,-1,4,-1,-3,-2,-1,-1,-10,-3,2,1,1,-1,-6,-2,1,-1],\n\t\t[5,339,330,-306,-316,0,-1,-1,-2,-2,-2,3,0,-3,-1,-8,-3,-4,-2,-6,0,0,-1,-4,0],\n\t\t[6,342,335,-309,-317,1,-1,-3,-3,0,-1,-1,-2,-6,-2,-5,-3,-7,-2,-2,-1,-1,1],\n\t\t[7,344,340,-311,-319,1,0,-3,-3,-3,-3,-1,-2,-7,-3,-5,-3,-5,-3,-4,0,2,-1],\n\t\t[8,344,345,-310,-318,-2,-3,-2,-4,-3,-2,-4,-4,-6,-4,-5,-3,-3,-2,-5,-1],\n\t\t[9,344,351,-312,-322,-1,-2,-3,-3,-2,-3,-6,-6,-6,-5,-4,-3,-4,-3,-1,0],\n\t\t[10,342,354,-312,-319,-1,-4,-3,-5,-2,-2,-7,-8,-6,-5,-2,-3,-4,-4,0,0],\n\t\t[11,340,356,-312,-319,-2,-4,-2,-2,-2,-5,-7,-9,-5,-4,-2,-4,-4,-4],\n\t\t[12,337,357,-312,-319,-1,-2,-1,-3,-3,-3,-7,-11,-3,-4,-4,-5,-2,-5],\n\t\t[13,333,357,-313,-319,0,-1,-1,-1,-2,-1,-5,-11,-2,-5,-4,-7,-4,-6],\n\t\t[14,328,356,-312,-319,-2,-1,0,2,-1,0,-3,-6,-2,-7,-3,-9,-3,-5,1,1],\n\t\t[15,319,352,-311,-319,-1,1,0,3,-2,2,-1,-1,-1,-1,-1,-7,-1,-6,-1,-6,0,1,0,-4],\n\t\t[16,312,347,-311,-318,0,1,-1,3,-2,1,-1,2,-1,1,-3,1,0,-3,-2,2,0,-4,-2,5,1,-7,0,1,1,-3,0,3],\n\t\t[17,305,341,-311,-318,0,0,-1,3,-1,1,-3,0,1,-1,-2,1,0,0,-3,0,0,1,0,-3,-4,3,-1,-2,-3,2,3,-4,-5,2],\n\t\t[18,300,337,-310,-319,0,-1,-1,1,-3,1,1,-1,-3,0,1,-1,1,-2,-2,1,1,-2,1,-1,2,-2,-5,4,-1,-1,1,-1,-2,1],\n\t\t[19,297,333,-309,-318,0,-1,-1,0,-2,1,0,0,-1,-1,0,-1,2,-1,-1,0,0,-1,3,-1,0,-2,-3,3,-1,-1,1,0,0,0],\n\t\t[20,295,330,-310,-318,1,-1,-1,0,-1,0,1,-1,-2,1,2,-2,0,0,1,-1,-2,1,4,-2,2,-2,-3,1,-1,2,3,-2],\n\t\t[21,293,327,-310,-319,2,0,-2,0,-1,-1,2,-1,-1,-1,3,0,-2,0,2,-1,-2,0,5,-1,0,-1,-1,0,1,1,2,-2],\n\t\t[22,290,323,-309,-319,2,-1,-2,1,0,-2,3,0,0,-1,0,0,0,0,2,-1,-2,-1,4,1,3,0,0,0,0,-1],\n\t\t[23,288,318,-309,-317,3,-1,-2,-1,0,0,2,-1,2,0,-1,-1,2,1,2,-1,-3,0,4,1,4,0],\n\t\t[24,287,314,-310,-317,4,-1,-2,-2,1,1,0,-2,3,1,-1,0,3,0,3,1,-2,-1,0,-1],\n\t\t[25,287,311,-311,-318,3,-1,0,-1,-1,0,3,-2,1,2,0,-2,4,3,1,0,0,-1],\n\t\t[26,288,308,-313,-319,3,-1,1,0,0,-3,0,0,5,3,-1,0,0,-1,3,2],\n\t\t[27,289,306,-313,-319,3,-1,0,-2,0,0,1,-1,3,3,1,0,-1,-1,6,3],\n\t\t[28,291,304,-313,-319,1,-1,1,-1,0,-1,0,0,4,4,0,-2,1,2,2,0],\n\t\t[29,293,303,-313,-321,1,1,0,-1,0,-1,2,1,1,0,1,2,3,2],\n\t\t[30,295,301,-313,-319,1,-1,0,1,-1,-1,1,0,3,2,1,1,2,2],\n\t\t[31,298,300,-313,-319,1,-1,0,1,0,-1,1,2,2,3,1,-1,1,3,-1,-1],\n\t\t[32,301,300,-313,-320,1,1,0,1,0,-1,2,1,1,3,1,2,0,1,1,-2,-1,2],\n\t\t[33,303,300,-311,-319,0,1,1,1,0,0,0,1,2,1,0,2,1,4,0,-5,0,2,0,2],\n\t\t[34,306,301,-311,-319,0,1,1,1,-1,0,1,2,1,1,0,0,0,1,0,0,0,0,0,2,0,-1,1,2],\n\t\t[35,311,304,-311,-320,0,1,0,0,0,1,-1,2,1,-1,0,1,-1,1,0,0,1,0,-1,1,0,0,0,1,0,0],\n\t\t[36,314,305,-310,-318,0,0,0,-1,-1,2,-1,1,1,0,0,-1,-1,2,0,0,0,-1,-1,2,-1,0,1,1,0,0],\n\t\t[37,317,308,-309,-319,1,-1,-1,2,-1,0,0,0,-1,0,1,-1,-1,1,0,0,-2,2,0,2,1,-2,-1,0,0,2],\n\t\t[38,321,310,-309,-317,2,-1,-1,0,-2,1,2,-2,-1,1,0,-1,-1,1,-4,1,3,0,-3,1,2,-3,-1,3],\n\t\t[39,323,313,-307,-318,1,-1,-1,0,-1,1,2,-3,-1,1,-1,0,-2,-1,-1,2,-1,0,-1,0,0,-1]\n\t],\n\t[\n\t\t[0,322,315,-303,-316,0,-2,1,0,-2,0,6,-2,-7,2,-3,-1,2,0,-1,-1],\n\t\t[1,324,317,-302,-316,-1,-1,2,-1,0,0,3,-1,-5,-1,-5,0,1,1,0,-1],\n\t\t[2,325,319,-299,-316,-3,0,3,-2,-1,0,4,-2,-7,0,-4,0,1,-1],\n\t\t[3,328,321,-300,-314,-1,-1,2,-1,-2,-2,4,0,-9,-4,0,1,0,-1,-5,1],\n\t\t[4,330,324,-298,-313,-3,-2,1,0,-2,-3,4,0,-6,-2,-4,-2,0,1,-4,-3,1,1,0,-1,-1,0],\n\t\t[5,333,328,-299,-313,-5,-3,3,-1,-5,-1,3,-1,-2,-3,-8,-1,-2,-2,-3,0,-1,-2,-2,0,-2,0],\n\t\t[6,337,333,-305,-315,-2,-3,2,1,-5,-4,0,-1,-3,-1,-3,-4,-9,-2,-1,-2,-3,2,2,-2,-3,0],\n\t\t[7,340,338,-310,-317,0,-3,1,0,-5,-3,-1,-2,-5,-2,-2,-3,-6,-2,-5,-2,0,-2,0,2],\n\t\t[8,341,343,-312,-319,0,-1,0,-3,-4,-3,-3,-3,-3,-2,-5,-4,-4,-2,-3,-2,-2,-1],\n\t\t[9,341,348,-314,-321,2,-1,-3,-4,-2,-3,-3,-2,-5,-5,-4,-3,-5,-3,-1,-2,-1,0],\n\t\t[10,339,352,-313,-321,0,-2,-1,-3,-3,-4,-4,-3,-4,-6,-5,-4,-3,-3,-1,-2,-2,0],\n\t\t[11,338,354,-314,-322,0,0,-1,-3,-4,-5,-1,-3,-7,-7,-2,-4,-4,-4,-1,-2],\n\t\t[12,336,355,-314,-322,0,1,-1,-4,-3,-3,-3,-4,-4,-7,-3,-4,-4,-5,0,-2],\n\t\t[13,333,356,-316,-323,2,1,-2,-2,-1,0,-3,-6,-2,-5,-4,-7,-3,-6,-1,-2,0,0],\n\t\t[14,328,354,-313,-321,-1,1,-1,-1,-1,1,-2,-2,-1,-5,-4,-10,-1,-2,-1,-8,-1,2],\n\t\t[15,319,350,-311,-319,-1,1,0,0,-2,2,0,1,-1,0,-2,-4,0,-5,-2,-8,1,3,-1,-6,1,4,-1,-2],\n\t\t[16,312,346,-310,-319,-1,1,-1,-1,-1,5,-1,1,-1,-1,-2,1,0,1,-2,0,0,-4,0,-2,0,-10,-2,6,-1,2,-2,6],\n\t\t[17,305,340,-309,-319,-2,3,1,-2,-2,1,-2,2,1,-2,-2,3,-1,1,0,-2,-1,-1,-1,-1,0,-4,-3,6,-1,-2,-2,-1],\n\t\t[18,301,336,-310,-320,-1,2,0,-1,-1,-1,-1,0,0,0,-1,-1,-1,0,0,1,0,-3,0,0,-3,1,0,2,-2,0,0,-5],\n\t\t[19,298,333,-309,-320,-1,2,1,-3,-1,2,-2,-1,1,0,0,-1,-1,0,1,0,-2,-2,0,2,-1,0,0,-1,-2,2],\n\t\t[20,296,329,-309,-318,-1,0,1,-1,0,0,-2,0,2,-1,-1,0,0,1,0,-3,0,1,-3,1,2,-1,0,-1],\n\t\t[21,294,327,-309,-319,1,0,-1,-1,0,0,0,-1,1,-1,0,0,-2,0,2,0,0,-1,-2,1,0,-1],\n\t\t[22,292,323,-309,-318,1,-1,-1,-1,1,0,0,0,2,-1,-1,0,-1,-1,2,1,1,-1,-3,1,-1,-1],\n\t\t[23,290,318,-308,-316,-1,-2,1,0,1,0,0,-1,3,0,-1,0,-2,-2,4,0,-2,1,-1,0],\n\t\t[24,289,315,-309,-317,0,-1,1,-1,1,1,0,-2,3,1,-3,-2,2,0,4,2,-3,-1],\n\t\t[25,290,312,-313,-317,2,-2,1,-1,1,0,0,-1,3,0,-4,-1,5,-1,1,1],\n\t\t[26,291,310,-315,-320,3,-1,-1,-2,2,0,-2,-3,6,5,-2,-4,2,1],\n\t\t[27,292,308,-315,-320,1,-2,0,-1,2,-2,-1,0,5,3,-1,-1],\n\t\t[28,294,306,-316,-321,1,0,-1,-2,3,0,-1,-1,4,0],\n\t\t[29,296,305,-316,-322,0,0,1,-1,0,0,3,0,-1,0],\n\t\t[30,297,304,-314,-322,-2,-1,2,1,0,-2,4,5,-1,-5],\n\t\t[31,300,303,-314,-321,-2,-2,1,-1,1,1,5,6,-2,-3],\n\t\t[32,303,304,-315,-323,0,-1,1,-1,0,2,2,5,1,-1,1,4],\n\t\t[33,305,304,-314,-323,1,1,0,0,2,0,0,5,1,-1,1,4,0,-1],\n\t\t[34,307,305,-313,-323,1,1,0,0,1,2,0,1,1,1,1,3,0,0,-1,-2,0,1],\n\t\t[35,311,307,-311,-322,0,2,1,-3,-1,3,0,0,-1,0,1,3,0,0,0,0,0,0,0,-1,0,0],\n\t\t[36,313,308,-308,-320,-2,-1,1,0,-1,1,0,1,0,-1,0,2,-1,2,0,-2,1,-1,-1,1,0,0],\n\t\t[37,315,310,-306,-320,0,0,-1,-1,-1,2,0,-2,0,2,0,-1,-3,3,2,-2,0,0,-2,0,1,0],\n\t\t[38,318,312,-305,-319,0,0,0,-1,-1,1,1,-2,-2,2,-2,0,0,0,0,-1,0,0,-1,1],\n\t\t[39,320,314,-304,-319,0,0,0,-1,-1,1,2,-2,-3,1,-2,0,0,-1,-1,1,0,0]\n\t],\n\t[\n\t\t[0,321,316,-302,-318,0,0,-2,0,1,-2,2,0,-3,0],\n\t\t[1,322,317,-299,-316,-1,-1,-5,0,5,-2,1,0,-4,-1],\n\t\t[2,324,319,-298,-315,-3,-1,-1,-3,1,0,3,-1],\n\t\t[3,326,321,-297,-314,-3,0,0,-4,-2,-1,2,-2,-3,0],\n\t\t[4,328,323,-296,-311,-4,-3,0,-3,-3,0,-1,-1,1,-2,-5,1],\n\t\t[5,332,327,-300,-312,-3,-2,0,-3,-5,-2,-1,-1,0,0,-2,-2,-2,-1],\n\t\t[6,335,333,-303,-315,-4,-3,-1,-2,-1,-2,-4,-1,-1,-2,-2,0,-4,-3,1,0,-7,-1,0,-1,-1,-1],\n\t\t[7,338,338,-308,-317,-3,-4,0,0,-2,-3,-4,-3,-3,-1,-1,-2,-3,0,-2,-2,-4,-2,0,1,0,-1],\n\t\t[8,339,343,-310,-319,-3,-3,0,-2,-2,-2,-5,-5,-2,-1,-2,-3,-4,-1,-1,-1,-2,-1,0,0],\n\t\t[9,339,347,-312,-320,-2,-4,-1,-1,-2,-4,-2,-2,-4,-4,-3,-1,-5,-4,-1,-2,1,1,-2,-1],\n\t\t[10,338,350,-314,-320,0,-3,-2,-2,-2,-4,-2,-2,-4,-4,-3,-4,-4,-4,-2,-3,1,2,0,1],\n\t\t[11,337,353,-315,-323,0,-1,-1,-2,-3,-4,-1,-2,-4,-5,-3,-5,-4,-2,-1,-5,0,1],\n\t\t[12,335,354,-314,-323,-1,0,0,-2,-4,-5,-1,-1,-3,-5,-3,-5,-3,-4,-3,-4,2,2],\n\t\t[13,332,354,-314,-321,-1,-2,-1,0,-2,-4,0,0,-4,-6,-2,-7,-2,-1,-3,-8,1,3],\n\t\t[14,328,353,-312,-320,-3,-1,0,0,-2,-3,-1,0,-2,-4,-1,-4,-2,-5,-2,-6,0,0],\n\t\t[15,320,350,-313,-321,1,3,-2,-1,0,1,-1,-2,-2,0,0,1,-1,-4,-1,-5,0,2,-3,-5,2,6,0,0],\n\t\t[16,312,345,-310,-319,-1,4,0,-5,-1,5,-2,-3,0,3,-2,1,-1,0,0,-4,-1,-2,-2,1,1,2,-2,-2],\n\t\t[17,306,340,-310,-319,-1,3,-1,-4,0,3,0,-2,-2,3,0,0,-2,4,-1,-1,-1,-3,1,-1,-2,-3,-1,4],\n\t\t[18,302,336,-311,-320,-1,2,1,-3,-1,0,-1,1,0,-2,-2,2,-2,-1,1,-2,-1,0,0,-1,2,-2,-1,0],\n\t\t[19,299,332,-310,-318,-1,1,1,-2,1,-1,-3,1,0,-2,0,2,-2,0,1,-3,1,1,-1,-1],\n\t\t[20,297,329,-310,-318,-1,0,1,0,2,-3,-2,2,-3,-2,2,0,-1,1,2,-3,-1,2,0,-2],\n\t\t[21,295,327,-309,-319,-2,0,2,0,1,-2,-3,1,2,-1,0,0,-2,0,4,-2,-2,1],\n\t\t[22,293,323,-309,-317,-1,-1,1,-1,2,-1,-4,0,2,-1,0,0,0,-1,2,0],\n\t\t[23,291,319,-309,-317,-1,-1,1,0,4,-1,-5,0,3,0,-1,0,3,-1],\n\t\t[24,291,316,-312,-318,1,0,2,0,0,-2,0,2,2,-1,-2,0,3,-1],\n\t\t[25,291,313,-314,-319,2,1,2,-1,2,0,-1,0,1,0,-1,-1],\n\t\t[26,292,310,-316,-319,2,-2,4,2,0,0,-1,-3,3,3,-2,-1],\n\t\t[27,294,309,-319,-322,3,2,3,-1,2,1,0,1],\n\t\t[28,295,308,-319,-324,3,2,4,1,0,-2],\n\t\t[29,298,306,-320,-323,2,0,3,2,2,1],\n\t\t[30,299,306,-317,-325,-1,0,4,3,0,-1],\n\t\t[31,302,305,-318,-325,1,1,1,-2,4,3],\n\t\t[32,304,305,-317,-325,0,1,2,-2,0,2],\n\t\t[33,305,305,-314,-323,1,-1,0,0,1,0],\n\t\t[34,307,306,-314,-325,3,3,0,-2,-2,0,4,4,-1,1],\n\t\t[35,311,308,-310,-323,-1,1,-1,-3,0,2,-1,1,0,1,1,1],\n\t\t[36,313,309,-308,-321,-1,0,0,-3,0,2,0,2,-2,0,1,0],\n\t\t[37,315,311,-307,-321,1,0,-1,-1,1,2,-2,-1,1,0,-1,2],\n\t\t[38,317,313,-304,-320,0,0,-1,0,1,-1,-1,0,-3,1,2,1],\n\t\t[39,319,314,-303,-318,0,-1,-3,0,5,0,-3,-1,-2,1]\n\t],\n\t[\n\t\t[0,322,316,-302,-317,-1,0,-2,-2],\n\t\t[1,324,318,-303,-318,0,0,-2,0],\n\t\t[2,326,320,-304,-318,2,1,-4,-2],\n\t\t[3,329,322,-304,-315,1,-2,-4,-2],\n\t\t[4,332,326,-305,-316,0,-2,-2,-3],\n\t\t[5,334,329,-306,-316,-1,-1,-1,-3],\n\t\t[6,336,333,-308,-316,-1,-2,-2,-2,-1,-3],\n\t\t[7,337,338,-308,-319,-4,-1,-1,-2,0,-2,-8,-3],\n\t\t[8,338,343,-310,-319,-5,-6,0,-1,0,1,-6,-7,-2,0,1,0],\n\t\t[9,337,347,-311,-321,-4,-4,0,-4,-1,0,-3,-3,-1,-1,-4,-4,-2,-3,-2,2,-2,-5],\n\t\t[10,336,348,-312,-319,-3,-4,-2,-2,-1,-2,-1,-2,-2,-3,-3,-3,-2,-5,-4,-2,0,0],\n\t\t[11,335,351,-313,-322,-3,-2,0,-2,-2,-3,-2,-3,0,0,-4,-6,-2,-3,-4,-4,0,1],\n\t\t[12,334,352,-313,-322,-5,-3,3,1,-4,-5,0,-2,-2,0,-4,-8,-1,-1,-3,-5,0,0],\n\t\t[13,332,354,-316,-324,1,-1,-2,0,-2,-5,0,2,-3,-4,-2,-7,0,2,-4,-11,0,2],\n\t\t[14,328,354,-313,-324,-2,0,1,2,-4,-8,1,3,-4,-6,0,-1,-2,2,-2,-10,0,-4],\n\t\t[15,320,351,-313,-324,0,5,1,-3,-3,2,-1,-8,-1,2,0,2,0,-1,-2,-5,-2,-5],\n\t\t[16,312,346,-310,-322,-2,6,0,-7,0,8,0,-11,-1,6,-2,1,0,2,-1,-5,0,-4],\n\t\t[17,306,342,-309,-323,-2,5,0,-5,-2,4,3,-6,-2,6,0,0,-2,4,0,-1,2,-6],\n\t\t[18,301,337,-309,-321,-2,0,1,-1,0,-1,0,0,-2,0,1,0,-3,3],\n\t\t[19,298,333,-308,-320,-1,1,0,0,1,-3,0,1,-1,0,0,-1],\n\t\t[20,296,331,-308,-321,-1,0,0,0,3,-2,-3,1,1,0],\n\t\t[21,294,327,-308,-319,-1,0,1,-1,4,0,-4,-2,0,1],\n\t\t[22,293,323,-309,-316,1,-2,-1,0,3,-3,0,1,-4,0],\n\t\t[23,293,318,-313,-316,3,-1,-1,0,4,-1,-1,0],\n\t\t[24,293,315,-316,-317,4,0,2,1,2,-1,-1,-1],\n\t\t[25,293,313,-316,-318,2,1,4,-1,0,-1],\n\t\t[26,294,312,-320,-322,6,4,2,-2],\n\t\t[27,295,310,-321,-322,6,1],\n\t\t[28,296,309,-320,-324,3,1],\n\t\t[29,298,307,-318,-324,2,1],\n\t\t[30,299,307,-316,-326,0,1],\n\t\t[31,302,307,-318,-328,3,3],\n\t\t[32,303,307,-315,-328,1,3],\n\t\t[33,305,307,-314,-326,2,1],\n\t\t[34,307,307,-312,-325,1,3,0,-1],\n\t\t[35,310,308,-309,-322,-1,0,0,0],\n\t\t[36,313,309,-309,-321,0,-1,1,2,-3,2],\n\t\t[37,315,311,-307,-321,1,0,-2,1,-2,2],\n\t\t[38,318,313,-304,-319,-1,-1,-3,0,-2,2],\n\t\t[39,320,314,-305,-318,1,-1,-2,1]\n\t]\n];\n", "/**\n * KD Tree\n *\n * @author Takuto Yanagida\n * @version 2024-08-06\n */\n\ntype Pair = [number, number];\n\nclass Node {\n\tp: Pair;\n\tq: Pair;\n\tnl: Node | null;\n\tnr: Node | null;\n\n\tconstructor(p: Pair, q: Pair, nl: Node | null, nr: Node | null) {\n\t\tthis.p = p;\n\t\tthis.q = q;\n\t\tthis.nl = nl;\n\t\tthis.nr = nr;\n\t}\n}\n\nexport class Tree {\n\troot: Node | null = null;\n\tk: number;\n\n\tconstructor(ps: [Pair, Pair][], k: number = 2) {\n\t\tthis.k = k;\n\t\tthis.root = this.build(ps, 0);\n\t}\n\n\tprivate build(ps: [Pair, Pair][], dep: number): Node | null {\n\t\tif (ps.length === 0) return null;\n\n\t\tconst ax = dep % this.k;\n\t\tps.sort(([p0, ], [p1, ]) => (p0[ax] - p1[ax]));\n\n\t\tconst med = Math.floor(ps.length / 2);\n\t\treturn new Node(\n\t\t\tps[med][0],\n\t\t\tps[med][1],\n\t\t\tthis.build(ps.slice(0, med), dep + 1),\n\t\t\tthis.build(ps.slice(med + 1), dep + 1),\n\t\t);\n\t}\n\n\tprivate dist(p0: Pair, p1: Pair): number {\n\t\treturn Math.sqrt((p0[0] - p1[0]) * (p0[0] - p1[0]) + (p0[1] - p1[1]) * (p0[1] - p1[1]));\n\t}\n\n\tneighbors(tar: Pair, size: number): [Pair, number][] {\n\t\tconst rs: { n: Node, d: number }[] = [];\n\n\t\tconst search = (n: Node | null, dep: number) => {\n\t\t\tif (n === null) return;\n\n\t\t\tconst ax = dep % this.k;\n\t\t\tconst d = this.dist(tar, n.p);\n\n\t\t\tif (rs.length < size) {\n\t\t\t\trs.push({ n, d });\n\t\t\t\trs.sort((a, b) => a.d - b.d);\n\t\t\t} else if (d < rs[rs.length - 1].d) {\n\t\t\t\trs[rs.length - 1] = { n, d };\n\t\t\t\trs.sort((a, b) => a.d - b.d);\n\t\t\t}\n\n\t\t\tconst nb = tar[ax] < n.p[ax] ? n.nl : n.nr;\n\t\t\tconst ob = nb === n.nl ? n.nr : n.nl;\n\n\t\t\tsearch(nb, dep + 1);\n\n\t\t\tif (rs.length < size || Math.abs(tar[ax] - n.p[ax]) < rs[rs.length - 1].d) {\n\t\t\t\tsearch(ob, dep + 1);\n\t\t\t}\n\t\t};\n\n\t\tsearch(this.root, 0);\n\t\treturn rs.map(r => [r.n.q, r.d]);\n\t}\n}\n", "/**\n * This class converts the PCCS color system.\n * Colors where h is -1 are handled especially as an achromatic color (n).\n * Reference: KOBAYASHI Mituo and YOSIKI Kayoko,\n * Mathematical Relation among PCCS Tones, PCCS Color Attributes and Munsell Color Attributes,\n * Journal of the Color Science Association of Japan 25(4), 249-261, 2001.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet, Quartet } from '../type';\nimport { PI2 } from '../math';\n\nimport * as Munsell from './munsell';\n\n// Hue [0, 24), 24 is also acceptable\nexport const MIN_HUE: number = 0;\nexport const MAX_HUE: number = 24;\nexport const MONO_LIMIT_S: number = 0.01;\n\nconst HUE_NAMES  = ['', 'pR', 'R', 'yR', 'rO', 'O', 'yO', 'rY', 'Y', 'gY', 'YG', 'yG', 'G', 'bG', 'GB', 'GB', 'gB', 'B', 'B', 'pB', 'V', 'bP', 'P', 'rP', 'RP'];\nconst TONE_NAMES = ['p', 'p+', 'ltg', 'g', 'dkg', 'lt', 'lt+', 'sf', 'd', 'dk', 'b', 's', 'dp', 'v', 'none'];\nconst MUNSELL_H = [\n\t96,  // Dummy\n\t0,  4,  7, 10, 14, 18, 22, 25, 28, 33, 38, 43,\n\t49, 55, 60, 65, 70, 73, 76, 79, 83, 87, 91, 96, 100\n];\nconst COEFFICIENTS: Triplet[] = [\n\t[0.853642,  0.084379, -0.002798],  // 0 === 24\n\t[1.042805,  0.046437,  0.001607],  // 2\n\t[1.079160,  0.025470,  0.003052],  // 4\n\t[1.039472,  0.054749, -0.000511],  // 6\n\t[0.925185,  0.050245,  0.000953],  // 8\n\t[0.968557,  0.012537,  0.003375],  // 10\n\t[1.070433, -0.047359,  0.007385],  // 12\n\t[1.087030, -0.051075,  0.006526],  // 14\n\t[1.089652, -0.050206,  0.006056],  // 16\n\t[0.880861,  0.060300, -0.001280],  // 18\n\t[0.897326,  0.053912, -0.000860],  // 20\n\t[0.887834,  0.055086, -0.000847],  // 22\n\t[0.853642,  0.084379, -0.002798],  // 24\n];\n\n/**\n * Enum type for conversion methods.\n */\nexport const ConversionMethod = Object.freeze({\n\t/**\n\t * Concise conversion\n\t */\n\tCONCISE: {\n\t\tcalcMunsellH: simplyCalcMunsellH,\n\t\tcalcMunsellS: simplyCalcMunsellC,\n\t\tcalcPccsH: simplyCalcPccsH,\n\t\tcalcPccsS: simplyCalcPccsS,\n\t},\n\n\t/**\n\t * Accurate conversion\n\t */\n\tACCURATE: {\n\t\tcalcMunsellH: calcMunsellH,\n\t\tcalcMunsellC: calcMunsellC,\n\t\tcalcPccsH: calcPccsH,\n\t\tcalcPccsS: calcPccsS,\n\t}\n});\n\nexport function setConversionMethod(cm: { calcMunsellH: (h: number) => number; calcMunsellC: (h: number, l: number, s: number) => number; calcPccsH: (h: number) => number; calcPccsS: (V: number, C: number, h: number) => number } ) {\n\tconversionMethod = cm;\n}\n\n/**\n * Indicates the currently selected color vision characteristic conversion method.\n */\nexport let conversionMethod = ConversionMethod.ACCURATE;\n\n/**\n * Enum type for Tone.\n */\nexport enum Tone {\n\tp,\n\tp_p,\n\tltg,\n\tg,\n\tdkg,\n\tlt,\n\tlt_p,\n\tsf,\n\td,\n\tdk,\n\tb,\n\ts,\n\tdp,\n\tv,\n\tnone,\n};\n\n\n// Calculation of PCCS value (accurate) ----------------------------------------\n\n\nfunction calcPccsH(H: number): number {\n\tlet h1 = -1, h2 = -1;\n\tfor (let i = 1; i < MUNSELL_H.length; ++i) {\n\t\tif (MUNSELL_H[i] <= H) h1 = i;\n\t\tif (H < MUNSELL_H[i]) {\n\t\t\th2 = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (h1 === -1) console.error(\"h1 is -1, H = \" + H);\n\tif (h2 === -1) console.error(\"h2 is -1, H = \" + H);\n\treturn h1 + (h2 - h1) * (H - MUNSELL_H[h1]) / (MUNSELL_H[h2] - MUNSELL_H[h1]);\n}\n\nfunction calcPccsS(V: number, C: number, h: number): number {\n\tconst a = calcInterpolatedCoefficients(h);\n\tconst g = 0.81 - 0.24 * Math.sin((h - 2.6) / 12 * Math.PI);\n\tconst a0 = -C / (1 - Math.exp(-g * V));\n\treturn solveEquation(simplyCalcPccsS(V, C, h), a[3], a[2], a[1], a0);\n}\n\nfunction calcInterpolatedCoefficients(h: number): Quartet {\n\tif (MAX_HUE < h) h -= MAX_HUE;\n\tlet hf = 0 | Math.floor(h);\n\tif (hf % 2 !== 0) --hf;\n\tlet hc = hf + 2;\n\tif (MAX_HUE < hc) hc -= MAX_HUE;\n\n\tconst af: Triplet = COEFFICIENTS[hf / 2], ac: Triplet = COEFFICIENTS[hc / 2], a: Quartet = [0, 0, 0, 0];\n\tfor (let i = 0; i < 3; ++i) {\n\t\ta[i + 1] = (h - hf) / (hc - hf) * (ac[i]- af[i]) + af[i];\n\t}\n\treturn a;\n}\n\nfunction solveEquation(x0: number, a3: number, a2: number, a1: number, a0: number): number {\n\tlet x = x0;\n\twhile (true) {\n\t\tconst y = a3 * x * x * x + a2 * x * x + a1 * x + a0;\n\t\tconst yp = 3 * a3 * x * x + 2 * a2 * x + a1;\n\t\tconst x1 = -y / yp + x;\n\t\tif (Math.abs(x1 - x) < 0.001) break;\n\t\tx = x1;\n\t}\n\treturn x;\n}\n\n\n// Calculation of Munsell value (accurate) -------------------------------------\n\n\nfunction calcMunsellH(h: number): number {\n\tconst h1 = 0 | Math.floor(h), h2 = h1 + 1;\n\tlet H1 = MUNSELL_H[h1], H2 = MUNSELL_H[h2];\n\tif (H1 > H2) H2 = 100;\n\treturn H1 + (H2 - H1) * (h - h1) / (h2 - h1);\n}\n\nfunction calcMunsellC(h: number, l: number, s: number): number {\n\tconst a = calcInterpolatedCoefficients(h);\n\tconst g = 0.81 - 0.24 * Math.sin((h - 2.6) / 12 * Math.PI);\n\treturn (a[3] * s * s * s + a[2] * s * s + a[1] * s) * (1 - Math.exp(-g * l));\n}\n\n\n// Calculation of PCCS value (concise) -----------------------------------------\n\n\nfunction simplyCalcPccsH(H: number): number {\n\tconst y = H * Math.PI / 50;\n\treturn 24 * y / PI2 + 1.24\n\t\t\t+ 0.02 * Math.cos(y) - 0.1 * Math.cos(2 * y) - 0.11  * Math.cos(3 * y)\n\t\t\t+ 0.68 * Math.sin(y) - 0.3 * Math.sin(2 * y) + 0.013 * Math.sin(3 * y);\n}\n\nfunction simplyCalcPccsS(V: number, C: number, h: number): number {\n\tconst Ct = 12 + 1.7 * Math.sin((h + 2.2) * Math.PI / 12);\n\tconst gt = 0.81 - 0.24 * Math.sin((h - 2.6) * Math.PI / 12);\n\tconst e2 = 0.004, e1 = 0.077, e0 = -C / (Ct * (1 - Math.exp(-gt * V)));\n\treturn (-e1 + Math.sqrt(e1 * e1 - 4 * e2 * e0)) / (2 * e2);\n}\n\n\n// Calculation of Munsell value (concise) --------------------------------------\n\n\nfunction simplyCalcMunsellH(h: number): number {\n\tconst x = (h - 1) * Math.PI / 12;\n\treturn 100 * x / PI2 - 1\n\t\t\t+ 0.12 * Math.cos(x) + 0.34 * Math.cos(2 * x) + 0.4 * Math.cos(3 * x)\n\t\t\t- 2.7  * Math.sin(x) + 1.5  * Math.sin(2 * x) - 0.4 * Math.sin(3 * x);\n}\n\nfunction simplyCalcMunsellC(h: number, l: number, s: number): number {\n\tconst Ct = 12 + 1.7 * Math.sin((h + 2.2) * Math.PI / 12);\n\tconst gt = 0.81 - 0.24 * Math.sin((h - 2.6) * Math.PI / 12);\n\treturn Ct * (0.077 * s + 0.0040 * s * s) * (1 - Math.exp(-gt * l));\n}\n\n\n// Munsell ---------------------------------------------------------------------\n\n\n/**\n * Convert Munsell (HVC) to PCCS (hls).\n * @param {Triplet} hvc Hue, value, chroma of Munsell color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} PCCS color.\n */\nexport function fromMunsell([H, V, C]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tlet h = 0;\n\tlet s = 0;\n\n\tif (Munsell.MAX_HUE <= H) H -= Munsell.MAX_HUE;\n\th = conversionMethod.calcPccsH(H);\n\tif (Munsell.MONO_LIMIT_C <= C) {\n\t\ts = conversionMethod.calcPccsS(V, C, h);\n\t}\n\tif (MAX_HUE <= h) h -= MAX_HUE;\n\n\tdest[0] = h;\n\tdest[1] = V;\n\tdest[2] = s;\n\treturn dest;\n}\n\n/**\n * Convert PCCS (hls) to Munsell (HVC).\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Munsell color.\n */\nexport function toMunsell([h, l, s]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tlet H = 0;\n\tlet C = 0;\n\n\tH = conversionMethod.calcMunsellH(h);\n\tif (MONO_LIMIT_S <= s) {\n\t\tC = conversionMethod.calcMunsellC(h, l, s);\n\t}\n\tif (H < 0) H += Munsell.MAX_HUE;\n\tif (Munsell.MAX_HUE <= H) H -= Munsell.MAX_HUE;\n\n\tdest[0] = H;\n\tdest[1] = l;\n\tdest[2] = C;\n\treturn dest;\n}\n\n\n// -----------------------------------------------------------------------------\n\n\n/**\n * Calculate tone.\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color\n * @return {number} Tone\n */\nexport function tone(hls: Triplet): number {\n\tconst s = hls[2];\n\tconst t = relativeLightness(hls);\n\tconst tu = s * -3 / 10 + 8.5;\n\tconst td = s * 3 / 10 + 2.5;\n\n\tif (s < 1) {\n\t\treturn Tone.none;\n\t} else if (1 <= s && s < 4) {\n\t\tif (t < td)  return Tone.dkg;\n\t\tif (t < 5.5) return Tone.g;\n\t\tif (t < tu)  return Tone.ltg;\n\t\tif (s < 2.5) return Tone.p;\n\t\treturn Tone.p_p;\n\t} else if (4 <= s && s < 7) {\n\t\tif (t < td)  return Tone.dk;\n\t\tif (t < 5.5) return Tone.d;\n\t\tif (t < tu)  return Tone.sf;\n\t\tif (s < 5.5) return Tone.lt;\n\t\treturn Tone.lt_p;\n\t} else if (7 <= s && s < 8.5) {\n\t\tif (t < td) return Tone.dp;\n\t\tif (t < tu) return Tone.s;\n\t\treturn Tone.b;\n\t} else {\n\t\treturn Tone.v;\n\t}\n}\n\n/**\n * Return relative lightness (lightness in tone coordinate system).\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color\n * @return {Triplet} Relative lightness L\n */\nexport function relativeLightness([h, l, s]: Triplet): number {\n\treturn l - (0.25 - 0.34 * Math.sqrt(1 - Math.sin((h - 2) * Math.PI / 12))) * s;\n}\n\n/**\n * Return absolute lightness (lightness in PCCS).\n * @param {Triplet} hLs Tone coordinate color\n * @return {Triplet} Absolute lightness l\n */\nexport function absoluteLightness([h, L, s]: Triplet): number {\n\treturn L + (0.25 - 0.34 * Math.sqrt(1 - Math.sin((h - 2) * Math.PI / 12))) * s;\n}\n\n/**\n * Convert PCCS color to tone coordinate color.\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} Tone coordinate color.\n */\nexport function toToneCoordinate(hls: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = hls[0];\n\tdest[1] = relativeLightness(hls);\n\tdest[2] = hls[2];\n\treturn dest;\n}\n\n/**\n * Convert tone coordinate color to PCCS color.\n * @param {Triplet} hLs Tone coordinate color.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} PCCS color.\n */\nexport function toNormalCoordinate(hLs: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = hLs[0];\n\tdest[1] = absoluteLightness(hLs);\n\tdest[2] = hLs[2];\n\treturn dest;\n}\n\n/**\n * Returns the string representation of PCCS numerical representation.\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color\n * @return {string} String representation\n */\nexport function toString(hls: Triplet): string {\n\tconst str_l = Math.round(hls[1] * 10) / 10;\n\tif (hls[2] < MONO_LIMIT_S) {\n\t\tif (9.5 <= hls[1]) return `W N-${str_l}`;\n\t\tif (hls[1] <= 1.5) return `Bk N-${str_l}`;\n\t\treturn `Gy-${str_l} N-${str_l}`;\n\t} else {\n\t\tconst str_h = Math.round(hls[0] * 10) / 10;\n\t\tconst str_s = Math.round(hls[2] * 10) / 10;\n\n\t\tlet tn = Math.round(hls[0]);\n\t\tif (tn <= 0) tn = MAX_HUE;\n\t\tif (MAX_HUE < tn) tn -= MAX_HUE;\n\t\tconst hue = HUE_NAMES[tn];\n\t\tconst t = TONE_NAMES[tone(hls)];\n\n\t\tif (t === 'none') return `${str_h}:${hue}-${str_l}-${str_s}s`;\n\t\treturn `${t}${str_h} ${str_h}:${hue}-${str_l}-${str_s}s`;\n\t}\n}\n\n/**\n * Returns the string representation of PCCS hues.\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color\n * @return {string} String representation of hues\n */\nexport function toHueString([h,, s]: Triplet): string {\n\tif (s < MONO_LIMIT_S) {\n\t\treturn 'N';\n\t} else {\n\t\tlet tn = Math.round(h);\n\t\tif (tn <= 0) tn = MAX_HUE;\n\t\tif (MAX_HUE < tn) tn -= MAX_HUE;\n\t\treturn HUE_NAMES[tn];\n\t}\n}\n\n/**\n * Returns the string representation of PCCS tones.\n * @param {Triplet} hls Hue, lightness, saturation of PCCS color\n * @return {string} String representation of tones\n */\nexport function toToneString(hls: Triplet): string {\n\tif (hls[2] < MONO_LIMIT_S) {\n\t\tif (9.5 <= hls[1]) return 'W';\n\t\tif (hls[1] <= 1.5) return 'Bk';\n\t\treturn 'Gy';\n\t} else {\n\t\treturn TONE_NAMES[tone(hls)];\n\t}\n}\n", "/**\n * Color\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from './type';\nimport * as Category from './eval/category';\nimport * as Conspicuity from './eval/conspicuity';\nimport * as Difference from './eval/difference';\nimport * as ColorVisionSimulation from './sim/color-vision';\n\nimport * as RGB from './cs/rgb';\nimport * as YIQ from './cs/yiq';\nimport * as LRGB from './cs/lrgb';\nimport * as Yxy from './cs/yxy';\nimport * as Lab from './cs/lab';\nimport * as LCh from './cs/lch';\nimport * as LMS from './cs/lms';\nimport * as Munsell from './cs/munsell';\nimport * as PCCS from './cs/pccs';\n\nexport enum ColorSpace {\n\tRGB,\n\tYIQ,\n\tLRGB,\n\tXYZ,\n\tYxy,\n\tLab,\n\tLCh,\n\tLMS,\n\tMunsell,\n\tPCCS,\n\tTone,\n}\n\nexport class Color {\n\tprivate ts = new Map<ColorSpace, Triplet>();\n\tprivate us = new Map<string, string|boolean|number>();\n\tprivate cs: ColorSpace | null = null;\n\n\tpublic constructor(cs: ColorSpace|null = null, t: Triplet|null = null) {\n\t\tif (cs !== null && t !== null) {  // Must check for null.\n\t\t\tthis.ts.set(cs, t);\n\t\t\tthis.cs = cs;\n\t\t}\n\t}\n\n\tpublic set(cs: ColorSpace, t: Triplet): void {\n\t\tthis.ts.clear();\n\t\tthis.us.clear();\n\n\t\tthis.ts.set(cs, t);\n\t\tthis.cs = cs;\n\t}\n\n\tpublic as(cs: ColorSpace): Triplet {\n\t\tswitch (cs) {\n\t\t\tcase ColorSpace.RGB    : return this.asRGB();\n\t\t\tcase ColorSpace.YIQ    : return this.asYIQ();\n\t\t\tcase ColorSpace.LRGB   : return this.asLRGB();\n\t\t\tcase ColorSpace.XYZ    : return this.asXYZ();\n\t\t\tcase ColorSpace.Yxy    : return this.asYxy();\n\t\t\tcase ColorSpace.Lab    : return this.asLab();\n\t\t\tcase ColorSpace.LCh    : return this.asLCh();\n\t\t\tcase ColorSpace.LMS    : return this.asLMS();\n\t\t\tcase ColorSpace.Munsell: return this.asMunsell();\n\t\t\tcase ColorSpace.PCCS   : return this.asPCCS();\n\t\t\tcase ColorSpace.Tone   : return this.asTone();\n\t\t}\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic asRGB(): Triplet {\n\t\tif (this.ts.has(ColorSpace.RGB)) {\n\t\t\treturn this.ts.get(ColorSpace.RGB) as Triplet;\n\t\t}\n\t\tconst t: Triplet = RGB.fromLRGB(this.asLRGB());\n\t\tthis.ts.set(ColorSpace.RGB, t);\n\t\tthis.us.set('rgb_saturation', RGB.isSaturated);\n\t\treturn t;\n\t}\n\n\tpublic asYIQ(): Triplet {\n\t\tif (this.ts.has(ColorSpace.YIQ)) {\n\t\t\treturn this.ts.get(ColorSpace.YIQ) as Triplet;\n\t\t}\n\t\tconst t: Triplet = YIQ.fromLRGB(this.asLRGB());\n\t\tthis.ts.set(ColorSpace.YIQ, t);\n\t\treturn t;\n\t}\n\n\tpublic asLRGB(): Triplet {\n\t\tif (this.ts.has(ColorSpace.LRGB)) {\n\t\t\treturn this.ts.get(ColorSpace.LRGB) as Triplet;\n\t\t}\n\t\tlet t: Triplet;\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.RGB:\n\t\t\t\tt = RGB.toLRGB(this.asRGB());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.YIQ:\n\t\t\t\tt = YIQ.toLRGB(this.asYIQ());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = LRGB.fromXYZ(this.asXYZ());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.LRGB, t);\n\t\treturn t;\n\t}\n\n\tpublic asXYZ(): Triplet {\n\t\tif (this.ts.has(ColorSpace.XYZ)) {\n\t\t\treturn this.ts.get(ColorSpace.XYZ) as Triplet;\n\t\t}\n\t\tlet t: Triplet = [0, 0, 0];\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.RGB:\n\t\t\tcase ColorSpace.YIQ:\n\t\t\tcase ColorSpace.LRGB:\n\t\t\t\tt = LRGB.toXYZ(this.asLRGB());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.LCh:\n\t\t\tcase ColorSpace.Lab:\n\t\t\t\tt = Lab.toXYZ(this.asLab());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.Yxy:\n\t\t\t\tt = Yxy.toXYZ(this.asYxy());\n\t\t\t\tthis.us.set('yxy_saturation', Yxy.isSaturated);\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.LMS:\n\t\t\t\tt = LMS.toXYZ(this.asLMS());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.Munsell:\n\t\t\tcase ColorSpace.PCCS:\n\t\t\tcase ColorSpace.Tone:\n\t\t\t\tt = Munsell.toXYZ(this.asMunsell());\n\t\t\t\tthis.us.set('munsell_saturation', Munsell.isSaturated);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.XYZ, t);\n\t\treturn t;\n\t}\n\n\tpublic asYxy(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Yxy)) {\n\t\t\treturn this.ts.get(ColorSpace.Yxy) as Triplet;\n\t\t}\n\t\tconst t: Triplet = Yxy.fromXYZ(this.asXYZ());\n\t\tthis.ts.set(ColorSpace.Yxy, t);\n\t\treturn t;\n\t}\n\n\tpublic asLab(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Lab)) {\n\t\t\treturn this.ts.get(ColorSpace.Lab) as Triplet;\n\t\t}\n\t\tlet t: Triplet;\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.LCh:\n\t\t\t\tt = LCh.toLab(this.asLCh());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = Lab.fromXYZ(this.asXYZ());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.Lab, t);\n\t\treturn t;\n\t}\n\n\tpublic asLCh(): Triplet {\n\t\tif (this.ts.has(ColorSpace.LCh)) {\n\t\t\treturn this.ts.get(ColorSpace.LCh) as Triplet;\n\t\t}\n\t\tconst t: Triplet = LCh.fromLab(this.asLab());\n\t\tthis.ts.set(ColorSpace.LCh, t);\n\t\treturn t;\n\t}\n\n\tpublic asLMS(): Triplet {\n\t\tif (this.ts.has(ColorSpace.LMS)) {\n\t\t\treturn this.ts.get(ColorSpace.LMS) as Triplet;\n\t\t}\n\t\tconst t: Triplet = LMS.fromXYZ(this.asXYZ());\n\t\tthis.ts.set(ColorSpace.LMS, t);\n\t\treturn t;\n\t}\n\n\tpublic asMunsell(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Munsell)) {\n\t\t\treturn this.ts.get(ColorSpace.Munsell) as Triplet;\n\t\t}\n\t\tlet t: Triplet;\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.PCCS:\n\t\t\tcase ColorSpace.Tone:\n\t\t\t\tt = PCCS.toMunsell(this.asPCCS());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = Munsell.fromXYZ(this.asXYZ());\n\t\t\t\tthis.us.set('munsell_saturation', Munsell.isSaturated);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.Munsell, t);\n\t\treturn t;\n\t}\n\n\tpublic asPCCS(): Triplet {\n\t\tif (this.ts.has(ColorSpace.PCCS)) {\n\t\t\treturn this.ts.get(ColorSpace.PCCS) as Triplet;\n\t\t}\n\t\tlet t: Triplet;\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.Tone:\n\t\t\t\tt = PCCS.toNormalCoordinate(this.asTone());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = PCCS.fromMunsell(this.asMunsell());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.PCCS, t);\n\t\treturn t;\n\t}\n\n\tpublic asTone(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Tone)) {\n\t\t\treturn this.ts.get(ColorSpace.Tone) as Triplet;\n\t\t}\n\t\tconst t: Triplet = PCCS.toToneCoordinate(this.asPCCS());\n\t\tthis.ts.set(ColorSpace.Tone, t);\n\t\treturn t;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic isRGBSaturated(forceToCheck: boolean = false): boolean {\n\t\tif (forceToCheck && !this.us.has('rgb_saturation')) {\n\t\t\tthis.asRGB();\n\t\t}\n\t\treturn (this.us.get('rgb_saturation') ?? false) as boolean;\n\t}\n\n\tpublic isYxySaturated(): boolean {\n\t\treturn (this.us.get('yxy_saturation') ?? false) as boolean;\n\t}\n\n\tpublic isMunsellSaturated(): boolean {\n\t\treturn (this.us.get('munsell_saturation') ?? false) as boolean;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic asMunsellNotation(): string {\n\t\tif (this.us.has('munsell_notation')) {\n\t\t\treturn this.us.get('munsell_notation') as string;\n\t\t}\n\t\tconst s = Munsell.toString(this.asMunsell());\n\t\tthis.us.set('munsell_notation', s);\n\t\treturn s;\n\t}\n\n\tpublic asPCCSNotation(): string {\n\t\tif (this.us.has('pccs_notation')) {\n\t\t\treturn this.us.get('pccs_notation') as string;\n\t\t}\n\t\tconst s = PCCS.toString(this.asPCCS());\n\t\tthis.us.set('pccs_notation', s);\n\t\treturn s;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic asConspicuity(): number {\n\t\tif (this.us.has('conspicuity')) {\n\t\t\treturn this.us.get('conspicuity') as number;\n\t\t}\n\t\tconst s = Conspicuity.conspicuityOfLab(this.asLab());\n\t\tthis.us.set('conspicuity', s);\n\t\treturn s;\n\t}\n\n\tpublic asCategory(): string {\n\t\tif (this.us.has('category')) {\n\t\t\treturn this.us.get('category') as string;\n\t\t}\n\t\tconst n = Category.categoryOfYxy(this.asYxy());\n\t\tthis.us.set('category', n);\n\t\treturn n;\n\t}\n\n\tpublic distanceTo(c: Color, method: 'sqrt'|'cie76'|'ciede2000' = 'ciede2000'): number {\n\t\tswitch (method) {\n\t\t\tcase 'sqrt':\n\t\t\t\treturn Difference.distance(this.asLab(), c.asLab());\n\t\t\tcase 'cie76':\n\t\t\t\treturn Difference.CIE76(this.asLab(), c.asLab());\n\t\t\tcase 'ciede2000':\n\t\t\tdefault:\n\t\t\t\treturn Difference.CIEDE2000(this.asLab(), c.asLab());\n\t\t}\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic toProtanopia(method: 'lms'|'lrgb' = 'lrgb', doCorrection: boolean = false): Color {\n\t\tColorVisionSimulation.setOkajimaCorrectionOption(doCorrection);\n\t\tswitch (method) {\n\t\t\tcase 'lms':\n\t\t\t\tconst lms0 = ColorVisionSimulation.lmsToProtanopia(this.asLMS());\n\t\t\t\treturn new Color(ColorSpace.LMS, lms0);\n\t\t\tcase 'lrgb':\n\t\t\tdefault:\n\t\t\t\tconst lms1 = ColorVisionSimulation.lrgbToProtanopia(this.asLRGB());\n\t\t\t\treturn new Color(ColorSpace.LMS, lms1);\n\t\t}\n\t}\n\n\tpublic toDeuteranopia(method: 'lms'|'lrgb' = 'lrgb', doCorrection: boolean = false): Color {\n\t\tColorVisionSimulation.setOkajimaCorrectionOption(doCorrection);\n\t\tswitch (method) {\n\t\t\tcase 'lms':\n\t\t\t\tconst lms0 = ColorVisionSimulation.lmsToDeuteranopia(this.asLMS());\n\t\t\t\treturn new Color(ColorSpace.LMS, lms0);\n\t\t\tcase 'lrgb':\n\t\t\tdefault:\n\t\t\t\tconst lms1 = ColorVisionSimulation.lrgbToDeuteranopia(this.asLRGB());\n\t\t\t\treturn new Color(ColorSpace.LMS, lms1);\n\t\t}\n\t}\n}\n", "/**\n * Color vision age-related change simulation (conversion other than lightness).\n * Reference: Katsunori Okajima, Human Color Vision Mechanism and its Age-Related Change,\n * IEICE technical report 109(249), 43-48, 2009-10-15.\n *\n * @author Takuto Yanagida\n * @version 2024-08-19\n */\n\nimport { Triplet } from '../type';\nimport { PI2, atan2rad, mag } from '../math';\n\nfunction hueDiff(a: number, b: number): number {\n\tconst p = atan2rad(b, a);\n\treturn 4.5 * Math.cos(PI2 * (p - 28.8) / 50.9) + 4.4;\n}\n\nfunction chromaRatio(a: number, b: number): number {\n\tconst c = mag(a, b);\n\treturn 0.83 * Math.exp(-c / 13.3) - (1 / 8) * Math.exp(-(c - 50) * (c - 50) / (3000 * 3000)) + 1;\n}\n\n\n// -----------------------------------------------------------------------------\n\n\n/**\n * Convert CIELAB (L*a*b*) to CIELAB in the color vision of elderly people (70 years old) (conversion other than lightness).\n * @param {Triplet} lab L*, a*, b* of CIELAB color (young person).\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} CIELAB color in color vision of elderly people.\n */\nexport function labToElderlyAB([ls, as, bs]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst rad = atan2rad(bs, as) + hueDiff(as, bs);\n\tconst c = mag(as, bs) * chromaRatio(as, bs);\n\tdest[0] = ls;\n\tdest[1] = c * Math.cos(rad);\n\tdest[2] = c * Math.sin(rad);\n\treturn dest;\n}\n\n/**\n * Convert CIELAB (L*a*b*) to CIELAB in the color vision of young people (20 years old) (conversion other than lightness).\n * @param {Triplet} lab L*, a*, b* of CIELAB color (elderly person).\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} CIELAB color in color vision of young people.\n */\nexport function labToYoungAB([ls, as, bs]: Triplet, dest: Triplet = [0, 0, 0]): Triplet {\n\tconst rad = atan2rad(bs, as) - hueDiff(as, bs);\n\tconst c = mag(as, bs) / chromaRatio(as, bs);\n\tdest[0] = ls;\n\tdest[1] = c * Math.cos(rad);\n\tdest[2] = c * Math.sin(rad);\n\treturn dest;\n}\n", "/**\n * Functions for Color Space Conversion\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from './type';\n\nimport * as RGB from './cs/rgb';\nimport * as YIQ from './cs/yiq';\nimport * as LRGB from './cs/lrgb';\nimport * as XYZ from './cs/xyz';\nimport * as Yxy from './cs/yxy';\nimport * as Lab from './cs/lab';\nimport * as LCh from './cs/lch';\nimport * as LMS from './cs/lms';\nimport * as Munsell from './cs/munsell';\nimport * as PCCS from './cs/pccs';\n\n/**\n * Convert a color from one color space to another.\n * @param {Triplet} vs a color of the color space 'from'\n * @param {string} from a color space name\n * @param {string=} [to='rgb'] a color space name\n * @return {Triplet} a color of the color space 'to'\n */\nexport function convert(vs: Triplet, from: string, to: string | undefined = 'rgb'): Triplet {\n\tconst type = from.toLowerCase() + '-' + to.toLowerCase();\n\tswitch (type) {\n\t\tcase 'yiq-rgb'     : return RGB.fromLRGB(LRGB.fromYIQ(vs));\n\t\tcase 'lrgb-rgb'    : return RGB.fromLRGB(vs);\n\t\tcase 'xyz-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(vs));\n\t\tcase 'yxy-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lch-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs))));\n\t\tcase 'lms-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-rgb' : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-rgb'    : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-lrgb'    : return LRGB.fromRGB(vs);\n\t\tcase 'yiq-lrgb'    : return LRGB.fromYIQ(vs);\n\t\tcase 'xyz-lrgb'    : return LRGB.fromXYZ(vs);\n\t\tcase 'yxy-lrgb'    : return LRGB.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-lrgb'    : return LRGB.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-lrgb'    : return LRGB.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'lms-lrgb'    : return LRGB.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-lrgb': return LRGB.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lrgb'   : return LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-yiq'     : return YIQ.fromLRGB(LRGB.fromRGB(vs));\n\t\tcase 'lrgb-yiq'    : return YIQ.fromLRGB(vs);\n\t\tcase 'xyz-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(vs));\n\t\tcase 'yxy-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lch-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs))));\n\t\tcase 'lms-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-yiq' : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-yiq'    : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-xyz'     : return XYZ.fromLRGB(LRGB.fromRGB(vs));\n\t\tcase 'yiq-xyz'     : return XYZ.fromLRGB(LRGB.fromYIQ(vs));\n\t\tcase 'lrgb-xyz'    : return XYZ.fromLRGB(vs);\n\t\tcase 'yxy-xyz'     : return XYZ.fromYxy(vs);\n\t\tcase 'lab-xyz'     : return XYZ.fromLab(vs);\n\t\tcase 'lch-xyz'     : return XYZ.fromLab(Lab.fromLCh(vs));\n\t\tcase 'lms-xyz'     : return XYZ.fromLMS(vs);\n\t\tcase 'munsell-xyz' : return XYZ.fromMunsell(vs);\n\t\tcase 'pccs-xyz'    : return XYZ.fromMunsell(Munsell.fromPCCS(vs));\n\n\t\tcase 'rgb-yxy'     : return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-yxy'     : return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-yxy'    : return Yxy.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-yxy'     : return Yxy.fromXYZ(vs);\n\t\tcase 'lab-yxy'     : return Yxy.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-yxy'     : return Yxy.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'lms-yxy'     : return Yxy.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-yxy' : return Yxy.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-yxy'    : return Yxy.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-lab'     : return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-lab'     : return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-lab'    : return Lab.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-lab'     : return Lab.fromXYZ(vs);\n\t\tcase 'lch-lab'     : return Lab.fromLCh(vs);\n\t\tcase 'yxy-lab'     : return Lab.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lms-lab'     : return Lab.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-lab' : return Lab.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lab'    : return Lab.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-lch'     : return LCh.fromLab(Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs))));\n\t\tcase 'yiq-lch'     : return LCh.fromLab(Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs))));\n\t\tcase 'lrgb-lch'    : return LCh.fromLab(Lab.fromXYZ(XYZ.fromLRGB(vs)));\n\t\tcase 'xyz-lch'     : return LCh.fromLab(Lab.fromXYZ(vs));\n\t\tcase 'lab-lch'     : return LCh.fromLab(vs);\n\t\tcase 'yxy-lch'     : return LCh.fromLab(Lab.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lms-lch'     : return LCh.fromLab(Lab.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-lch' : return LCh.fromLab(Lab.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-lch'    : return LCh.fromLab(Lab.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-lms'     : return LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-lms'     : return LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-lms'    : return LMS.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-lms'     : return LMS.fromXYZ(vs);\n\t\tcase 'yxy-lms'     : return LMS.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-lms'     : return LMS.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-lms'     : return LMS.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'munsell-lms' : return LMS.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lms'    : return LMS.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-munsell' : return Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-munsell' : return Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-munsell': return Munsell.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-munsell' : return Munsell.fromXYZ(vs);\n\t\tcase 'yxy-munsell' : return Munsell.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-munsell' : return Munsell.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-munsell' : return Munsell.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'lms-munsell' : return Munsell.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'pccs-munsell': return Munsell.fromPCCS(vs);\n\n\t\tcase 'rgb-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs))));\n\t\tcase 'yiq-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs))));\n\t\tcase 'lrgb-pccs'   : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(vs)));\n\t\tcase 'xyz-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(vs));\n\t\tcase 'yxy-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lch-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs))));\n\t\tcase 'lms-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-pccs': return PCCS.fromMunsell(vs);\n\t}\n\treturn vs;\n}\nexport function getConverter(from: string, to: string = 'rgb') {\n\tconst type = from.toLowerCase() + '-' + to.toLowerCase();\n\tswitch (type) {\n\t\tcase 'yiq-rgb'     : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromYIQ(vs));\n\t\tcase 'lrgb-rgb'    : return (vs: Triplet) => RGB.fromLRGB(vs);\n\t\tcase 'xyz-rgb'     : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(vs));\n\t\tcase 'yxy-rgb'     : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-rgb'     : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lch-rgb'     : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs))));\n\t\tcase 'lms-rgb'     : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-rgb' : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-rgb'    : return (vs: Triplet) => RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-lrgb'    : return (vs: Triplet) => LRGB.fromRGB(vs);\n\t\tcase 'yiq-lrgb'    : return (vs: Triplet) => LRGB.fromYIQ(vs);\n\t\tcase 'xyz-lrgb'    : return (vs: Triplet) => LRGB.fromXYZ(vs);\n\t\tcase 'yxy-lrgb'    : return (vs: Triplet) => LRGB.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-lrgb'    : return (vs: Triplet) => LRGB.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-lrgb'    : return (vs: Triplet) => LRGB.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'lms-lrgb'    : return (vs: Triplet) => LRGB.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-lrgb': return (vs: Triplet) => LRGB.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lrgb'   : return (vs: Triplet) => LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-yiq'     : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromRGB(vs));\n\t\tcase 'lrgb-yiq'    : return (vs: Triplet) => YIQ.fromLRGB(vs);\n\t\tcase 'xyz-yiq'     : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(vs));\n\t\tcase 'yxy-yiq'     : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-yiq'     : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lch-yiq'     : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs))));\n\t\tcase 'lms-yiq'     : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-yiq' : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-yiq'    : return (vs: Triplet) => YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-xyz'     : return (vs: Triplet) => XYZ.fromLRGB(LRGB.fromRGB(vs));\n\t\tcase 'yiq-xyz'     : return (vs: Triplet) => XYZ.fromLRGB(LRGB.fromYIQ(vs));\n\t\tcase 'lrgb-xyz'    : return (vs: Triplet) => XYZ.fromLRGB(vs);\n\t\tcase 'yxy-xyz'     : return (vs: Triplet) => XYZ.fromYxy(vs);\n\t\tcase 'lab-xyz'     : return (vs: Triplet) => XYZ.fromLab(vs);\n\t\tcase 'lch-xyz'     : return (vs: Triplet) => XYZ.fromLab(Lab.fromLCh(vs));\n\t\tcase 'lms-xyz'     : return (vs: Triplet) => XYZ.fromLMS(vs);\n\t\tcase 'munsell-xyz' : return (vs: Triplet) => XYZ.fromMunsell(vs);\n\t\tcase 'pccs-xyz'    : return (vs: Triplet) => XYZ.fromMunsell(Munsell.fromPCCS(vs));\n\n\t\tcase 'rgb-yxy'     : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-yxy'     : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-yxy'    : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-yxy'     : return (vs: Triplet) => Yxy.fromXYZ(vs);\n\t\tcase 'lab-yxy'     : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-yxy'     : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'lms-yxy'     : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-yxy' : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-yxy'    : return (vs: Triplet) => Yxy.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-lab'     : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-lab'     : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-lab'    : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-lab'     : return (vs: Triplet) => Lab.fromXYZ(vs);\n\t\tcase 'lch-lab'     : return (vs: Triplet) => Lab.fromLCh(vs);\n\t\tcase 'yxy-lab'     : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lms-lab'     : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-lab' : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lab'    : return (vs: Triplet) => Lab.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-lch'     : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs))));\n\t\tcase 'yiq-lch'     : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs))));\n\t\tcase 'lrgb-lch'    : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromLRGB(vs)));\n\t\tcase 'xyz-lch'     : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(vs));\n\t\tcase 'lab-lch'     : return (vs: Triplet) => LCh.fromLab(vs);\n\t\tcase 'yxy-lch'     : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lms-lch'     : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-lch' : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-lch'    : return (vs: Triplet) => LCh.fromLab(Lab.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-lms'     : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-lms'     : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-lms'    : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-lms'     : return (vs: Triplet) => LMS.fromXYZ(vs);\n\t\tcase 'yxy-lms'     : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-lms'     : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-lms'     : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'munsell-lms' : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lms'    : return (vs: Triplet) => LMS.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-munsell' : return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-munsell' : return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-munsell': return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-munsell' : return (vs: Triplet) => Munsell.fromXYZ(vs);\n\t\tcase 'yxy-munsell' : return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-munsell' : return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lch-munsell' : return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs)));\n\t\tcase 'lms-munsell' : return (vs: Triplet) => Munsell.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'pccs-munsell': return (vs: Triplet) => Munsell.fromPCCS(vs);\n\n\t\tcase 'rgb-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs))));\n\t\tcase 'yiq-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs))));\n\t\tcase 'lrgb-pccs'   : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(vs)));\n\t\tcase 'xyz-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(vs));\n\t\tcase 'yxy-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lch-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLab(Lab.fromLCh(vs))));\n\t\tcase 'lms-pccs'    : return (vs: Triplet) => PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-pccs': return (vs: Triplet) => PCCS.fromMunsell(vs);\n\t}\n\treturn (vs: Triplet) => vs;\n}\n", "/**\n * Functions for Color Space Conversion\n *\n * @author Takuto Yanagida\n * @version 2024-08-18\n */\n\nimport { Triplet } from './type';\n\nimport * as Lab from './cs/lab';\nimport * as LRGB from './cs/lrgb';\nimport * as RGB from './cs/rgb';\nimport * as XYZ from './cs/xyz';\n\n/**\n * Convert color integer to sRGB.\n * @param {number} v Color integer.\n * @param {Triplet} dest dest An array where the result will be stored. If not provided, a new array will be created and returned.\n * @return {Triplet} sRGB color.\n */\nexport function fromColorInteger(v: number, dest: Triplet = [0, 0, 0]): Triplet {\n\tdest[0] = (v >> 16) & 0xFF;\n\tdest[1] = (v >>  8) & 0xFF;\n\tdest[2] = (v      ) & 0xFF;\n\treturn dest;\n}\n\n/**\n * Convert sRGB to color integer.\n * @param {Triplet} rgb sRGB color.\n * @return {number} Color integer.\n */\nexport function toColorInteger([r, g, b]: Triplet): number {\n\treturn (r << 16) | (g << 8) | b | 0xff000000;\n}\n\n/**\n * Convert sRGB to Lightness-only sRGB.\n * @param {Triplet} rgb sRGB color\n * @return {Triplet} Lightness-only sRGB color\n */\nexport function toMonochromeRGB(rgb: Triplet): Triplet {\n\tconst l = Lab.lightnessFromXYZ(XYZ.fromLRGB(LRGB.fromRGB(rgb)));\n\treturn RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab([l, 0, 0])));\n}\n"],
  "mappings": "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",
  "names": ["category_exports", "__export", "CATEGORICAL_COLORS", "categoryOfYxy", "CC_TABLE", "DEG_RAD", "RAD_DEG", "PI2", "atan2rad", "bs", "as", "mag", "a", "b", "CATEGORICAL_COLORS", "Y_TO_LUM", "LUM_TABLE", "categoryOfYxy", "y", "sx", "sy", "lum", "diff", "clu", "l", "d", "t", "CC_TABLE", "dis", "cc", "i", "x", "mag", "ci", "conspicuity_exports", "__export", "conspicuityOfLab", "conspicuityOfLab", "as", "bs", "h", "atan2rad", "RAD_DEG", "a", "difference_exports", "__export", "CIE76", "CIEDE2000", "DE_TO_NBS", "NBS", "distance", "NBS", "DE_TO_NBS", "distance", "v11", "v12", "v13", "v21", "v22", "v23", "CIE76", "ls1", "as1", "bs1", "ls2", "as2", "bs2", "CIEDE2000", "C1", "mag", "C2", "Cb", "G", "ap1", "ap2", "Cp1", "Cp2", "hp1", "atan", "hp2", "DLp", "DCp", "Dhp", "DHp", "sin", "Lbp", "Cbp", "hbp", "T", "cos", "Dth", "sq", "RC", "SL", "SC", "SH", "RT", "kL", "kC", "kH", "v", "y", "x", "atan2rad", "RAD_DEG", "deg", "DEG_RAD", "color_vision_exports", "__export", "brettelD", "brettelP", "lmsToDeuteranopia", "lmsToProtanopia", "lrgbToDeuteranopia", "lrgbToProtanopia", "okajimaCorrectionD", "okajimaCorrectionP", "setOkajimaCorrectionOption", "lms_exports", "__export", "BRADFORD", "BRADFORD_INV", "ConversionMethod", "SMITH_POKORNY", "SMITH_POKORNY_INV", "VON_KRIES", "VON_KRIES_INV", "fromXYZ", "setConversionMethod", "toXYZ", "cm", "conversionMethod", "x", "y", "z", "dest", "l", "m", "s", "xyz_exports", "__export", "fromIlluminantC", "toXYZ", "toIlluminantC", "fromXYZ", "lrgb_exports", "__export", "toLRGB", "fromXYZ", "fromLRGB", "toXYZ", "rgb_exports", "__export", "INV_MAX", "MAX", "MIN", "fromLRGB", "isSaturated", "toLRGB", "checkRange", "vs", "min", "max", "i", "fn", "v", "ifn", "lr", "lg", "lb", "dest", "r", "g", "b", "yiq_exports", "__export", "fromLRGB", "toLRGB", "lr", "lg", "lb", "dest", "y", "i", "q", "fromXYZ", "x", "y", "z", "dest", "toXYZ", "lr", "lg", "lb", "yxy_exports", "__export", "fromXYZ", "isSaturated", "toXYZ", "D50_xyz", "D50_XYZ", "D65_xyz", "D65_XYZ", "isSaturated", "fromXYZ", "x", "y", "z", "dest", "sum", "D65_xyz", "toXYZ", "sx", "sy", "d0", "d1", "d2", "D65_XYZ", "lab_exports", "__export", "toLab", "fromXYZ", "lightnessFromXYZ", "fromLab", "toXYZ", "lch_exports", "__export", "fromLab", "toLab", "fromLab", "ls", "as", "bs", "dest", "rad", "atan2rad", "mag", "RAD_DEG", "toLab", "cs", "h", "DEG_RAD", "C1", "C2", "C3", "XYZ_TRISTIMULUS_VALUES", "D65_XYZ", "fn", "v", "ifn", "fromXYZ", "x", "y", "z", "dest", "fx", "fy", "fz", "toXYZ", "ls", "as", "bs", "lightnessFromXYZ", "munsell_exports", "__export", "MAX_HUE", "MIN_HUE", "MONO_LIMIT_C", "toMunsell", "fromXYZ", "hueNameToHueValue", "hueValueToHueName", "isSaturated", "fromMunsell", "toString", "toXYZ", "TBL_V", "TBL_SRC_MIN", "Node", "p", "q", "nl", "nr", "Tree", "ps", "k", "dep", "ax", "p0", "p1", "med", "tar", "size", "rs", "search", "n", "d", "a", "b", "nb", "ob", "r", "pccs_exports", "__export", "ConversionMethod", "MAX_HUE", "MIN_HUE", "MONO_LIMIT_S", "Tone", "absoluteLightness", "conversionMethod", "fromMunsell", "relativeLightness", "setConversionMethod", "toHueString", "toMunsell", "toNormalCoordinate", "toString", "toToneCoordinate", "toToneString", "tone", "MIN_HUE", "MAX_HUE", "MONO_LIMIT_S", "HUE_NAMES", "TONE_NAMES", "MUNSELL_H", "COEFFICIENTS", "ConversionMethod", "simplyCalcMunsellH", "simplyCalcMunsellC", "simplyCalcPccsH", "simplyCalcPccsS", "calcMunsellH", "calcMunsellC", "calcPccsH", "calcPccsS", "setConversionMethod", "cm", "conversionMethod", "Tone", "H", "h1", "h2", "i", "V", "C", "h", "a", "calcInterpolatedCoefficients", "g", "a0", "solveEquation", "hf", "hc", "af", "ac", "x0", "a3", "a2", "a1", "x", "y", "yp", "x1", "H1", "H2", "l", "s", "PI2", "Ct", "gt", "e2", "e1", "e0", "fromMunsell", "dest", "MONO_LIMIT_C", "toMunsell", "tone", "hls", "t", "relativeLightness", "tu", "td", "absoluteLightness", "L", "toToneCoordinate", "toNormalCoordinate", "hLs", "toString", "str_l", "str_h", "str_s", "tn", "hue", "toHueString", "toToneString", "eq0", "x", "EP", "eq", "x0", "x1", "div", "a", "b", "r", "cross", "ax", "ay", "bx", "by", "inside", "p", "c", "HUE_NAMES", "ILLUMINANT_C", "TBL_MAX_C", "TBL", "TBL_TREES", "MIN_HUE", "MAX_HUE", "MONO_LIMIT_C", "isSaturated", "initTable", "TBL_V", "TBL_SRC_MIN", "tbl_v", "tbl_src_min", "vi", "i", "n", "data", "cs", "hi", "integrate", "ci", "y", "Tree", "x_", "y_", "getXy", "ht", "getMaxC", "v2y", "v", "v2", "y2v", "f", "fp", "yxy2mun", "Y", "h", "scanHC", "vi_l", "hc_l", "vi_u", "hc_u", "v_l", "v_h", "calcIdpHc", "q", "ht0", "ht1", "ht_l", "inner", "c_l", "hc_r", "state", "scanOneHC", "ps", "c0", "d0", "c1", "d1", "wa", "wb", "wc", "wd", "interpolationR", "ea", "eb", "ec", "rt", "v1", "h1", "h2", "deX", "deY", "h0", "mun2yxy", "v_max", "xy", "scanXY", "xy_l", "xy_u", "v_u", "c_u", "ht_u", "maxC_hl", "maxC_hu", "c_c", "interpolate3", "interpolate2", "interpolate4", "rx", "w1", "w2", "w3", "d", "ry", "wab", "wdc", "fromXYZ", "xyz", "dest", "toIlluminantC", "toXYZ", "fromIlluminantC", "hueNameToHueValue", "hueName", "isDigit", "s", "len", "hv", "hueValueToHueName", "hue", "chroma", "h10", "toString", "str_v", "str_c", "fromIlluminantC", "x", "y", "z", "dest", "toIlluminantC", "brettelP", "l", "m", "s", "dest", "brettelD", "OC_LMS_BASE", "fromXYZ", "OC_LMS_BASE2", "toXYZ", "doOc", "ocAlpha", "ocBeta", "setOkajimaCorrectionOption", "doCorrection", "alpha", "beta", "okajimaCorrectionP", "l2", "m2", "s2", "base", "sp1", "dp0", "dp1", "dp2", "k", "okajimaCorrectionD", "sp0", "lmsToProtanopia", "lms", "lmsToDeuteranopia", "lrgbToProtanopia", "lr", "lg", "lb", "lrgb2", "lrgbToDeuteranopia", "ColorSpace", "Color", "_Color", "cs", "t", "fromLRGB", "isSaturated", "toLRGB", "fromXYZ", "toXYZ", "toLab", "fromLab", "toMunsell", "toNormalCoordinate", "fromMunsell", "toToneCoordinate", "forceToCheck", "s", "toString", "conspicuityOfLab", "n", "categoryOfYxy", "c", "method", "distance", "CIE76", "CIEDE2000", "doCorrection", "setOkajimaCorrectionOption", "lms0", "lmsToProtanopia", "lms1", "lrgbToProtanopia", "lmsToDeuteranopia", "lrgbToDeuteranopia", "age_exports", "__export", "labToElderlyAB", "labToYoungAB", "hueDiff", "a", "b", "p", "atan2rad", "PI2", "chromaRatio", "c", "mag", "labToElderlyAB", "ls", "as", "bs", "dest", "rad", "labToYoungAB", "convert", "vs", "from", "to", "fromLRGB", "toLRGB", "fromXYZ", "toXYZ", "toLab", "toMunsell", "fromLab", "fromMunsell", "getConverter", "toMonochromeRGB", "rgb", "l", "lightnessFromXYZ", "toXYZ", "toLRGB", "fromLRGB", "fromXYZ"]
}
